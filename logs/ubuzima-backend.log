2025-08-11 09:51:34 [main] INFO  r.health.ubuzima.UbuzimaApplication - Starting UbuzimaApplication using Java 17.0.15 with PID 23356 (C:\WEB\develop\backend\target\classes started by tganz in C:\WEB\develop\backend)
2025-08-11 09:51:34 [main] DEBUG r.health.ubuzima.UbuzimaApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-08-11 09:51:34 [main] INFO  r.health.ubuzima.UbuzimaApplication - The following 1 profile is active: "dev"
2025-08-11 09:51:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 09:51:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 206 ms. Found 24 JPA repository interfaces.
2025-08-11 09:51:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 09:51:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 09:51:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-08-11 09:51:41 [main] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-08-11 09:51:41 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6099 ms
2025-08-11 09:51:41 [main] DEBUG r.h.ubuzima.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
2025-08-11 09:51:41 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 09:51:41 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-11 09:51:41 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 09:51:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 09:51:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 09:51:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@813ab53
2025-08-11 09:51:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 09:51:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-11 09:51:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 09:51:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 09:51:46 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 09:51:50 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 09:51:50 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 37874c18-313a-432f-9966-94f4e4b9c653

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-11 09:51:51 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-11 09:51:51 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@79765d4e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fda62b9, org.springframework.security.web.context.SecurityContextHolderFilter@363db8bc, org.springframework.security.web.header.HeaderWriterFilter@12f3fa74, org.springframework.web.filter.CorsFilter@50cd0736, org.springframework.security.web.authentication.logout.LogoutFilter@3e605746, rw.health.ubuzima.security.JwtAuthFilter@6f2d3391, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@477e55ee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3cbe3580, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@440f6aa8, org.springframework.security.web.session.SessionManagementFilter@231e8a56, org.springframework.security.web.access.ExceptionTranslationFilter@e05cdb9, org.springframework.security.web.access.intercept.AuthorizationFilter@3c712d2e]
2025-08-11 09:51:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-08-11 09:51:52 [main] INFO  r.health.ubuzima.UbuzimaApplication - Started UbuzimaApplication in 19.136 seconds (process running for 22.906)
2025-08-11 09:51:53 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 09:51:53 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 09:51:53 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 09:51:53 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        HealthFacility x */ select
            count(*) 
        from
            health_facilities hf1_0
2025-08-11 09:51:53 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        el1_0.id,
        el1_0.audio_url,
        el1_0.author,
        el1_0.category,
        el1_0.content,
        el1_0.created_at,
        el1_0.description,
        el1_0.duration_minutes,
        el1_0.is_published,
        el1_0.language,
        el1_0.level,
        el1_0.order_index,
        el1_0.title,
        el1_0.updated_at,
        el1_0.version,
        el1_0.video_url,
        el1_0.view_count 
    from
        education_lessons el1_0
2025-08-11 09:51:53 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 09:51:53 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ContraceptionMethod x */ select
            count(*) 
        from
            contraception_methods cm1_0
2025-08-11 09:51:53 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        MenstrualCycle x */ select
            count(*) 
        from
            menstrual_cycles mc1_0
2025-08-11 09:51:53 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 11:09:44 [http-nio-0.0.0.0-8080-exec-10] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 11:09:44 [http-nio-0.0.0.0-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 11:09:44 [http-nio-0.0.0.0-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 235 ms
2025-08-11 11:09:45 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-11 11:09:45 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-11 11:09:45 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-11 11:09:47 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 11:09:47 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:47 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 11:09:48 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 11:09:48 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for rw.health.ubuzima.entity.User */update users 
    set
        cell=?,
        date_of_birth=?,
        device_token=?,
        district=?,
        email=?,
        email_verified=?,
        emergency_contact=?,
        facility_id=?,
        gender=?,
        last_login_at=?,
        name=?,
        password_hash=?,
        phone=?,
        phone_verified=?,
        platform=?,
        preferred_language=?,
        profile_picture_url=?,
        role=?,
        sector=?,
        status=?,
        updated_at=?,
        version=?,
        village=? 
    where
        id=? 
        and version=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/unread?userId=2
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversations?userId=2
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/clients
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/dashboard/stats
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/appointments
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/dashboard/stats
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/clients
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/appointments
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversations?userId=2
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/unread?userId=2
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/unread?userId=2
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversations?userId=2
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/unread?userId=2
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversations?userId=2
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/appointments
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/appointments
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/dashboard/stats
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/clients
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/dashboard/stats
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/clients
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.village = :village 
        AND u.role = 'CLIENT' 
        AND u.status = 'ACTIVE' */ select
            u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.village=? 
            and u1_0.role='CLIENT' 
            and u1_0.status='ACTIVE'
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    WHERE
        u.id IN (SELECT
            DISTINCT m.receiver.id 
        FROM
            Message m 
        WHERE
            m.sender = :user 
        UNION
        SELECT
            DISTINCT m.sender.id 
        FROM
            Message m 
        WHERE
            m.receiver = :user 
            AND m.sender != :user) */ select
            distinct u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.id in (select
                distinct m1_0.receiver_id 
            from
                messages m1_0 
            where
                m1_0.sender_id=? 
            union
            select
                distinct m2_0.sender_id 
            from
                messages m2_0 
            where
                m2_0.receiver_id=? 
                and m2_0.sender_id<>?)
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    WHERE
        u.id IN (SELECT
            DISTINCT m.receiver.id 
        FROM
            Message m 
        WHERE
            m.sender = :user 
        UNION
        SELECT
            DISTINCT m.sender.id 
        FROM
            Message m 
        WHERE
            m.receiver = :user 
            AND m.sender != :user) */ select
            distinct u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.id in (select
                distinct m1_0.receiver_id 
            from
                messages m1_0 
            where
                m1_0.sender_id=? 
            union
            select
                distinct m2_0.sender_id 
            from
                messages m2_0 
            where
                m2_0.receiver_id=? 
                and m2_0.sender_id<>?)
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.is_emergency,
            m1_0.is_read,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.priority,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false 
        order by
            m1_0.created_at desc
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.is_emergency,
            m1_0.is_read,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.priority,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false 
        order by
            m1_0.created_at desc
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.village = :village 
        AND u.role = 'CLIENT' 
        AND u.status = 'ACTIVE' */ select
            u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.village=? 
            and u1_0.role='CLIENT' 
            and u1_0.status='ACTIVE'
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt ASC */ select
            m1_0.id,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.is_emergency,
            m1_0.is_read,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.priority,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt ASC */ select
            m1_0.id,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.is_emergency,
            m1_0.is_read,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.priority,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false */ select
            count(m1_0.id) 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false */ select
            count(m1_0.id) 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.village=? 
        and u1_0.role=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.village=? 
        and u1_0.role=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:52 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:09:53 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 11:09:53 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 11:09:53 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 11:09:53 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 11:09:53 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 11:09:53 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.is_emergency,
            m1_0.is_read,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.priority,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 11:10:23 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 11:43:14 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/1
2025-08-11 11:43:14 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/1
2025-08-11 11:43:14 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 11:43:14 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:43:14 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:43:14 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:43:14 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 11:43:43 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/2
2025-08-11 11:43:43 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/2
2025-08-11 11:43:43 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 11:43:43 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:43:43 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:43:43 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:43:43 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 11:43:57 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /health-worker/appointments/2/status
2025-08-11 11:43:57 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /health-worker/appointments/2/status
2025-08-11 11:43:58 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 11:43:58 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* update
        for rw.health.ubuzima.entity.Appointment */update appointments 
    set
        appointment_type=?,
        cancellation_reason=?,
        cancelled_at=?,
        completed_at=?,
        duration_minutes=?,
        health_facility_id=?,
        health_worker_id=?,
        notes=?,
        reason=?,
        reminder_sent=?,
        scheduled_date=?,
        status=?,
        updated_at=?,
        user_id=?,
        version=? 
    where
        id=? 
        and version=?
2025-08-11 11:43:58 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/2
2025-08-11 11:43:58 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/2
2025-08-11 11:43:58 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 11:43:58 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:43:58 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:43:58 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:43:58 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 11:44:09 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/2
2025-08-11 11:44:09 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/2
2025-08-11 11:44:09 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 11:44:09 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 11:44:09 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:44:09 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 11:44:09 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 13:27:12 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/1
2025-08-11 13:27:12 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/1
2025-08-11 13:27:12 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 13:27:13 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 13:27:13 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:27:13 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:27:13 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 13:27:29 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /health-worker/appointments/1/status
2025-08-11 13:27:29 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /health-worker/appointments/1/status
2025-08-11 13:27:29 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 13:27:29 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for rw.health.ubuzima.entity.Appointment */update appointments 
    set
        appointment_type=?,
        cancellation_reason=?,
        cancelled_at=?,
        completed_at=?,
        duration_minutes=?,
        health_facility_id=?,
        health_worker_id=?,
        notes=?,
        reason=?,
        reminder_sent=?,
        scheduled_date=?,
        status=?,
        updated_at=?,
        user_id=?,
        version=? 
    where
        id=? 
        and version=?
2025-08-11 13:27:30 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/1
2025-08-11 13:27:30 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/1
2025-08-11 13:27:30 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 13:27:30 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 13:27:30 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:27:30 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:27:30 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 13:27:38 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/2
2025-08-11 13:27:38 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/2
2025-08-11 13:27:38 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 13:27:38 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 13:27:38 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:27:38 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:27:38 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 13:28:00 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/3
2025-08-11 13:28:00 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/3
2025-08-11 13:28:00 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-08-11 13:28:00 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 13:28:00 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:28:00 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:28:00 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.is_emergency,
            m1_0.is_read,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.priority,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 13:28:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 13:29:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 13:29:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 13:29:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 13:29:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:29:01 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /notifications?userId=2&page=0&limit=20
2025-08-11 13:29:01 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /notifications?userId=2&page=0&limit=20
2025-08-11 13:29:01 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 13:29:01 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 13:29:01 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        n1_0.id,
        n1_0.action_url,
        n1_0.created_at,
        n1_0.icon,
        n1_0.is_read,
        n1_0.message,
        n1_0.metadata,
        n1_0.priority,
        n1_0.read_at,
        n1_0.scheduled_for,
        n1_0.sent_at,
        n1_0.title,
        n1_0.notification_type,
        n1_0.updated_at,
        n1_0.user_id,
        n1_0.version 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
    order by
        n1_0.created_at desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-11 13:29:16 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /notifications/1/read
2025-08-11 13:29:16 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /notifications/1/read
2025-08-11 13:29:16 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        n1_0.id,
        n1_0.action_url,
        n1_0.created_at,
        n1_0.icon,
        n1_0.is_read,
        n1_0.message,
        n1_0.metadata,
        n1_0.priority,
        n1_0.read_at,
        n1_0.scheduled_for,
        n1_0.sent_at,
        n1_0.title,
        n1_0.notification_type,
        n1_0.updated_at,
        n1_0.user_id,
        n1_0.version 
    from
        notifications n1_0 
    where
        n1_0.id=?
2025-08-11 14:50:48 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 14:50:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 14:50:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 14:58:09 [main] INFO  r.health.ubuzima.UbuzimaApplication - Starting UbuzimaApplication using Java 17.0.15 with PID 9228 (C:\WEB\develop\backend\target\classes started by tganz in C:\WEB\develop\backend)
2025-08-11 14:58:09 [main] DEBUG r.health.ubuzima.UbuzimaApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-08-11 14:58:09 [main] INFO  r.health.ubuzima.UbuzimaApplication - The following 1 profile is active: "dev"
2025-08-11 14:58:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 14:58:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 178 ms. Found 24 JPA repository interfaces.
2025-08-11 14:58:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 14:58:14 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 14:58:14 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-08-11 14:58:14 [main] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-08-11 14:58:14 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4373 ms
2025-08-11 14:58:14 [main] DEBUG r.h.ubuzima.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
2025-08-11 14:58:14 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 14:58:15 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-11 14:58:15 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 14:58:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 14:58:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 14:58:15 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@52bb3dcd
2025-08-11 14:58:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 14:58:15 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-11 14:58:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column audio_duration integer
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column audio_url varchar(255)
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column deleted_at timestamp(6)
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column deleted_for_everyone boolean
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column delivered_at timestamp(6)
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column edited_at timestamp(6)
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column file_size bigint
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column forwarded_from varchar(255)
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column is_forwarded boolean
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column message_status varchar(255)
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column mime_type varchar(255)
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column quoted_message_id bigint
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column reaction varchar(255)
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column starred boolean
2025-08-11 14:58:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add column thumbnail_url varchar(255)
2025-08-11 14:58:19 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 14:58:19 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 14:58:21 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'adminController' defined in file [C:\WEB\develop\backend\target\classes\rw\health\ubuzima\controller\AdminController.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'appointmentRepository' defined in rw.health.ubuzima.repository.AppointmentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
2025-08-11 14:58:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 14:58:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 14:58:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 14:58:21 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-11 14:58:21 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 14:58:21 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'adminController' defined in file [C:\WEB\develop\backend\target\classes\rw\health\ubuzima\controller\AdminController.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'appointmentRepository' defined in rw.health.ubuzima.repository.AppointmentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at rw.health.ubuzima.UbuzimaApplication.main(UbuzimaApplication.java:14)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'appointmentRepository' defined in rw.health.ubuzima.repository.AppointmentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 19 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 42 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: Cannot compare left expression of type 'java.lang.Object' with right expression of type 'java.sql.Date'
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:848)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:753)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:136)
	at jdk.internal.reflect.GeneratedMethodAccessor39.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy170.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 48 common frames omitted
Caused by: org.hibernate.query.SemanticException: Cannot compare left expression of type 'java.lang.Object' with right expression of type 'java.sql.Date'
	at org.hibernate.query.sqm.internal.TypecheckUtil.assertComparable(TypecheckUtil.java:358)
	at org.hibernate.query.sqm.tree.predicate.SqmComparisonPredicate.<init>(SqmComparisonPredicate.java:48)
	at org.hibernate.query.sqm.tree.predicate.SqmComparisonPredicate.<init>(SqmComparisonPredicate.java:34)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2448)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2261)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:790)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:840)
	... 56 common frames omitted
2025-08-11 15:03:08 [main] INFO  r.health.ubuzima.UbuzimaApplication - Starting UbuzimaApplication using Java 17.0.15 with PID 26456 (C:\WEB\develop\backend\target\classes started by tganz in C:\WEB\develop\backend)
2025-08-11 15:03:08 [main] DEBUG r.health.ubuzima.UbuzimaApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-08-11 15:03:08 [main] INFO  r.health.ubuzima.UbuzimaApplication - The following 1 profile is active: "dev"
2025-08-11 15:03:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 15:03:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 129 ms. Found 24 JPA repository interfaces.
2025-08-11 15:03:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 15:03:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 15:03:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-08-11 15:03:10 [main] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-08-11 15:03:10 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2623 ms
2025-08-11 15:03:11 [main] DEBUG r.h.ubuzima.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
2025-08-11 15:03:11 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 15:03:11 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-11 15:03:11 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 15:03:11 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 15:03:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 15:03:11 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@65f470f8
2025-08-11 15:03:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 15:03:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-11 15:03:13 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 15:03:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 15:03:14 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 15:03:15 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'adminController' defined in file [C:\WEB\develop\backend\target\classes\rw\health\ubuzima\controller\AdminController.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'appointmentRepository' defined in rw.health.ubuzima.repository.AppointmentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
2025-08-11 15:03:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 15:03:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 15:03:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 15:03:15 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-11 15:03:15 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 15:03:15 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'adminController' defined in file [C:\WEB\develop\backend\target\classes\rw\health\ubuzima\controller\AdminController.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'appointmentRepository' defined in rw.health.ubuzima.repository.AppointmentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at rw.health.ubuzima.UbuzimaApplication.main(UbuzimaApplication.java:14)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'appointmentRepository' defined in rw.health.ubuzima.repository.AppointmentRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 19 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List rw.health.ubuzima.repository.AppointmentRepository.findTodayAppointmentsByHealthWorker(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 42 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: Operand of + is of type 'java.lang.Integer' which is not a temporal amount (it is not an instance of 'java.time.TemporalAmount')
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:848)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:753)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:136)
	at jdk.internal.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy170.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 48 common frames omitted
Caused by: org.hibernate.query.SemanticException: Operand of + is of type 'java.lang.Integer' which is not a temporal amount (it is not an instance of 'java.time.TemporalAmount')
	at org.hibernate.query.sqm.internal.TypecheckUtil.assertOperable(TypecheckUtil.java:454)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAdditionExpression(SemanticQueryBuilder.java:2958)
	at org.hibernate.grammars.hql.HqlParser$AdditionExpressionContext.accept(HqlParser.java:7113)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGroupedExpression(SemanticQueryBuilder.java:3038)
	at org.hibernate.grammars.hql.HqlParser$GroupedExpressionContext.accept(HqlParser.java:7231)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2430)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2261)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:790)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:840)
	... 56 common frames omitted
2025-08-11 15:06:02 [main] INFO  r.health.ubuzima.UbuzimaApplication - Starting UbuzimaApplication using Java 17.0.15 with PID 21516 (C:\WEB\develop\backend\target\classes started by tganz in C:\WEB\develop\backend)
2025-08-11 15:06:02 [main] DEBUG r.health.ubuzima.UbuzimaApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-08-11 15:06:02 [main] INFO  r.health.ubuzima.UbuzimaApplication - The following 1 profile is active: "dev"
2025-08-11 15:06:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 15:06:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 24 JPA repository interfaces.
2025-08-11 15:06:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 15:06:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 15:06:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-08-11 15:06:04 [main] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-08-11 15:06:04 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2813 ms
2025-08-11 15:06:05 [main] DEBUG r.h.ubuzima.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
2025-08-11 15:06:05 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 15:06:05 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-11 15:06:05 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 15:06:06 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 15:06:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 15:06:06 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e1897d
2025-08-11 15:06:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 15:06:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-11 15:06:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 15:06:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 15:06:10 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 15:06:12 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 15:06:12 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: bc345009-e7ff-4dca-bbf6-0a84869945ed

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-11 15:06:13 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-11 15:06:13 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7d47ee57, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e57c95, org.springframework.security.web.context.SecurityContextHolderFilter@63d2ac0f, org.springframework.security.web.header.HeaderWriterFilter@dbefb31, org.springframework.web.filter.CorsFilter@7d6d120b, org.springframework.security.web.authentication.logout.LogoutFilter@4d8f3fd3, rw.health.ubuzima.security.JwtAuthFilter@342723a3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24e45da9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f108023, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2369db96, org.springframework.security.web.session.SessionManagementFilter@50dd3bd2, org.springframework.security.web.access.ExceptionTranslationFilter@3982d511, org.springframework.security.web.access.intercept.AuthorizationFilter@46b352ee]
2025-08-11 15:06:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-08-11 15:06:14 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-08-11 15:06:14 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@10f261b3]]
2025-08-11 15:06:14 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-08-11 15:06:14 [main] INFO  r.health.ubuzima.UbuzimaApplication - Started UbuzimaApplication in 13.026 seconds (process running for 13.996)
2025-08-11 15:06:14 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 15:06:14 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 15:06:14 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:06:14 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 15:06:14 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:06:14 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 15:06:14 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 15:06:14 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        HealthFacility x */ select
            count(*) 
        from
            health_facilities hf1_0
2025-08-11 15:06:14 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        el1_0.id,
        el1_0.audio_url,
        el1_0.author,
        el1_0.category,
        el1_0.content,
        el1_0.created_at,
        el1_0.description,
        el1_0.duration_minutes,
        el1_0.is_published,
        el1_0.language,
        el1_0.level,
        el1_0.order_index,
        el1_0.title,
        el1_0.updated_at,
        el1_0.version,
        el1_0.video_url,
        el1_0.view_count 
    from
        education_lessons el1_0
2025-08-11 15:06:14 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:06:14 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:06:14 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 15:06:14 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ContraceptionMethod x */ select
            count(*) 
        from
            contraception_methods cm1_0
2025-08-11 15:06:14 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:06:14 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        MenstrualCycle x */ select
            count(*) 
        from
            menstrual_cycles mc1_0
2025-08-11 15:06:14 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:06:14 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:06:14 [MessageBroker-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23514
2025-08-11 15:06:14 [MessageBroker-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (2, 2025-08-11 15:06:14.791439, 2025-08-11 15:06:14.791439, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
2025-08-11 15:06:14 [MessageBroker-1] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (2, 2025-08-11 15:06:14.791439, 2025-08-11 15:06:14.791439, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [notifications_notification_type_check]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:210)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:82)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (2, 2025-08-11 15:06:14.791439, 2025-08-11 15:06:14.791439, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:97)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (2, 2025-08-11 15:06:14.791439, 2025-08-11 15:06:14.791439, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 91 common frames omitted
2025-08-11 15:06:14 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated SCHEDULED appointment 3 to NO_SHOW status (immediate)
2025-08-11 15:06:14 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:06:14 [MessageBroker-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 25P02
2025-08-11 15:06:14 [MessageBroker-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: current transaction is aborted, commands ignored until end of transaction block
2025-08-11 15:06:14 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:06:14 [MessageBroker-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 25P02
2025-08-11 15:06:14 [MessageBroker-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: current transaction is aborted, commands ignored until end of transaction block
2025-08-11 15:06:14 [MessageBroker-1] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.orm.jpa.JpaSystemException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:210)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:93)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: current transaction is aborted, commands ignored until end of transaction block
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 91 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (2, 2025-08-11 15:06:14.791439, 2025-08-11 15:06:14.791439, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:210)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:82)
	... 31 common frames omitted
2025-08-11 15:06:14 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated CONFIRMED appointment 1 to NO_SHOW status (15min grace)
2025-08-11 15:06:14 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 2 overdue appointments to NO_SHOW (1 scheduled, 1 confirmed)
2025-08-11 15:06:14 [MessageBroker-1] ERROR org.hibernate.AssertionFailure - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
2025-08-11 15:06:14 [MessageBroker-1] ERROR r.h.u.s.AppointmentStatusSchedulerService - Error during scheduled appointment status update
org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.checkId(DefaultFlushEntityEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.getValues(DefaultFlushEntityEventListener.java:179)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.onFlushEntity(DefaultFlushEntityEventListener.java:138)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:226)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:90)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:52)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1366)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:136)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy187.findByStatusAndScheduledDateBetween(Unknown Source)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentsToInProgress(AppointmentStatusSchedulerService.java:112)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:06:14 [MessageBroker-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:803)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:06:15 [RMI TCP Connection(2)-192.168.1.75] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 15:06:15 [RMI TCP Connection(2)-192.168.1.75] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 15:06:15 [RMI TCP Connection(2)-192.168.1.75] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-11 15:07:14 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 1, completed tasks = 1]
2025-08-11 15:15:46 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-08-11 15:15:46 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@10f261b3]]
2025-08-11 15:15:46 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-08-11 15:15:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 15:15:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 15:15:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 15:15:58 [main] INFO  r.health.ubuzima.UbuzimaApplication - Starting UbuzimaApplication using Java 17.0.15 with PID 20576 (C:\WEB\develop\backend\target\classes started by tganz in C:\WEB\develop\backend)
2025-08-11 15:15:58 [main] DEBUG r.health.ubuzima.UbuzimaApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-08-11 15:15:58 [main] INFO  r.health.ubuzima.UbuzimaApplication - The following 1 profile is active: "dev"
2025-08-11 15:16:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 15:16:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 155 ms. Found 24 JPA repository interfaces.
2025-08-11 15:16:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 15:16:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 15:16:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-08-11 15:16:01 [main] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-08-11 15:16:01 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2864 ms
2025-08-11 15:16:01 [main] DEBUG r.h.ubuzima.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
2025-08-11 15:16:02 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 15:16:02 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-11 15:16:02 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 15:16:02 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 15:16:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 15:16:02 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5764d421
2025-08-11 15:16:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 15:16:02 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-11 15:16:04 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 15:16:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 15:16:04 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 15:16:07 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 15:16:07 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 316dd18b-b823-418f-886c-0c1acd957b0f

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-11 15:16:07 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-11 15:16:07 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@69cf08a5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f8e4389, org.springframework.security.web.context.SecurityContextHolderFilter@5c37f527, org.springframework.security.web.header.HeaderWriterFilter@24e45da9, org.springframework.web.filter.CorsFilter@2097a9e3, org.springframework.security.web.authentication.logout.LogoutFilter@7d47ee57, rw.health.ubuzima.security.JwtAuthFilter@6ea3a513, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a7828c2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b511b64, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b39920, org.springframework.security.web.session.SessionManagementFilter@c3bb4f4, org.springframework.security.web.access.ExceptionTranslationFilter@2dae11b4, org.springframework.security.web.access.intercept.AuthorizationFilter@5360e703]
2025-08-11 15:16:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-08-11 15:16:08 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-08-11 15:16:08 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@6890ca0d]]
2025-08-11 15:16:08 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-08-11 15:16:08 [main] INFO  r.health.ubuzima.UbuzimaApplication - Started UbuzimaApplication in 10.487 seconds (process running for 11.489)
2025-08-11 15:16:08 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 15:16:08 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:16:08 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 15:16:08 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 15:16:08 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        HealthFacility x */ select
            count(*) 
        from
            health_facilities hf1_0
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:16:08 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        el1_0.id,
        el1_0.audio_url,
        el1_0.author,
        el1_0.category,
        el1_0.content,
        el1_0.created_at,
        el1_0.description,
        el1_0.duration_minutes,
        el1_0.is_published,
        el1_0.language,
        el1_0.level,
        el1_0.order_index,
        el1_0.title,
        el1_0.updated_at,
        el1_0.version,
        el1_0.video_url,
        el1_0.view_count 
    from
        education_lessons el1_0
2025-08-11 15:16:08 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:16:08 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ContraceptionMethod x */ select
            count(*) 
        from
            contraception_methods cm1_0
2025-08-11 15:16:08 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        MenstrualCycle x */ select
            count(*) 
        from
            menstrual_cycles mc1_0
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:16:08 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:16:08 [MessageBroker-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23514
2025-08-11 15:16:08 [MessageBroker-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (4, 2025-08-11 15:16:08.800277, 2025-08-11 15:16:08.800277, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
2025-08-11 15:16:08 [MessageBroker-1] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (4, 2025-08-11 15:16:08.800277, 2025-08-11 15:16:08.800277, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [notifications_notification_type_check]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (4, 2025-08-11 15:16:08.800277, 2025-08-11 15:16:08.800277, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:97)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (4, 2025-08-11 15:16:08.800277, 2025-08-11 15:16:08.800277, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 91 common frames omitted
2025-08-11 15:16:08 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated SCHEDULED appointment 3 to NO_SHOW status (immediate)
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:16:08 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:16:08 [MessageBroker-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 25P02
2025-08-11 15:16:08 [MessageBroker-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: current transaction is aborted, commands ignored until end of transaction block
2025-08-11 15:16:08 [MessageBroker-1] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.orm.jpa.JpaSystemException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:101)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: current transaction is aborted, commands ignored until end of transaction block
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 91 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (4, 2025-08-11 15:16:08.800277, 2025-08-11 15:16:08.800277, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	... 31 common frames omitted
2025-08-11 15:16:08 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated CONFIRMED appointment 1 to NO_SHOW status (15min grace)
2025-08-11 15:16:08 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 2 overdue appointments to NO_SHOW (1 scheduled, 1 confirmed)
2025-08-11 15:16:08 [MessageBroker-1] ERROR org.hibernate.AssertionFailure - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
2025-08-11 15:16:08 [MessageBroker-1] ERROR r.h.u.s.AppointmentStatusSchedulerService - Error during scheduled appointment status update
org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.checkId(DefaultFlushEntityEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.getValues(DefaultFlushEntityEventListener.java:179)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.onFlushEntity(DefaultFlushEntityEventListener.java:138)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:226)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:90)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:52)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1366)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:136)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy187.findByStatusAndScheduledDateBetween(Unknown Source)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentsToInProgress(AppointmentStatusSchedulerService.java:124)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:16:08 [MessageBroker-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:803)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:16:09 [RMI TCP Connection(2)-192.168.1.75] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 15:16:09 [RMI TCP Connection(2)-192.168.1.75] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 15:16:09 [RMI TCP Connection(2)-192.168.1.75] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-11 15:17:08 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 1, completed tasks = 1]
2025-08-11 15:31:08 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:31:09 [MessageBroker-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23514
2025-08-11 15:31:09 [MessageBroker-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (7, 2025-08-11 15:31:09.46835, 2025-08-11 15:31:09.46835, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
2025-08-11 15:31:09 [MessageBroker-1] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (7, 2025-08-11 15:31:09.46835, 2025-08-11 15:31:09.46835, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [notifications_notification_type_check]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (7, 2025-08-11 15:31:09.46835, 2025-08-11 15:31:09.46835, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:97)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (7, 2025-08-11 15:31:09.46835, 2025-08-11 15:31:09.46835, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 91 common frames omitted
2025-08-11 15:31:09 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated SCHEDULED appointment 3 to NO_SHOW status (immediate)
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:31:09 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:31:09 [MessageBroker-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 25P02
2025-08-11 15:31:09 [MessageBroker-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: current transaction is aborted, commands ignored until end of transaction block
2025-08-11 15:31:09 [MessageBroker-1] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.orm.jpa.JpaSystemException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:101)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: current transaction is aborted, commands ignored until end of transaction block
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 91 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (7, 2025-08-11 15:31:09.46835, 2025-08-11 15:31:09.46835, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	... 31 common frames omitted
2025-08-11 15:31:09 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated CONFIRMED appointment 1 to NO_SHOW status (15min grace)
2025-08-11 15:31:09 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 2 overdue appointments to NO_SHOW (1 scheduled, 1 confirmed)
2025-08-11 15:31:09 [MessageBroker-1] ERROR org.hibernate.AssertionFailure - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
2025-08-11 15:31:09 [MessageBroker-1] ERROR r.h.u.s.AppointmentStatusSchedulerService - Error during scheduled appointment status update
org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.checkId(DefaultFlushEntityEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.getValues(DefaultFlushEntityEventListener.java:179)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.onFlushEntity(DefaultFlushEntityEventListener.java:138)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:226)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:90)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:52)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1366)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:136)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy187.findByStatusAndScheduledDateBetween(Unknown Source)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentsToInProgress(AppointmentStatusSchedulerService.java:124)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:31:09 [MessageBroker-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:803)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:46:08 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 15:46:09 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:46:09 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:46:09 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:46:10 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:46:10 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:46:10 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:46:10 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:46:10 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:46:12 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:46:12 [MessageBroker-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23514
2025-08-11 15:46:12 [MessageBroker-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (10, 2025-08-11 15:46:12.034742, 2025-08-11 15:46:12.034742, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
2025-08-11 15:46:12 [MessageBroker-2] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (10, 2025-08-11 15:46:12.034742, 2025-08-11 15:46:12.034742, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [notifications_notification_type_check]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (10, 2025-08-11 15:46:12.034742, 2025-08-11 15:46:12.034742, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:97)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (10, 2025-08-11 15:46:12.034742, 2025-08-11 15:46:12.034742, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 91 common frames omitted
2025-08-11 15:46:12 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated SCHEDULED appointment 3 to NO_SHOW status (immediate)
2025-08-11 15:46:13 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:46:13 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:46:13 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:46:13 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:46:13 [MessageBroker-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 25P02
2025-08-11 15:46:13 [MessageBroker-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: current transaction is aborted, commands ignored until end of transaction block
2025-08-11 15:46:13 [MessageBroker-2] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.orm.jpa.JpaSystemException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:101)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: current transaction is aborted, commands ignored until end of transaction block
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 90 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (10, 2025-08-11 15:46:12.034742, 2025-08-11 15:46:12.034742, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	... 31 common frames omitted
2025-08-11 15:46:14 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated CONFIRMED appointment 1 to NO_SHOW status (15min grace)
2025-08-11 15:46:14 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 2 overdue appointments to NO_SHOW (1 scheduled, 1 confirmed)
2025-08-11 15:46:14 [MessageBroker-2] ERROR org.hibernate.AssertionFailure - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
2025-08-11 15:46:14 [MessageBroker-2] ERROR r.h.u.s.AppointmentStatusSchedulerService - Error during scheduled appointment status update
org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.checkId(DefaultFlushEntityEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.getValues(DefaultFlushEntityEventListener.java:179)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.onFlushEntity(DefaultFlushEntityEventListener.java:138)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:226)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:90)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:52)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1366)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:136)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy187.findByStatusAndScheduledDateBetween(Unknown Source)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentsToInProgress(AppointmentStatusSchedulerService.java:124)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:46:14 [MessageBroker-2] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:803)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:47:08 [MessageBroker-4] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 1, completed tasks = 4]
2025-08-11 15:59:27 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 15:59:28 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 15:59:29 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:29 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /health-worker/appointments/update-statuses
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /health-worker/appointments/update-statuses
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:31 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23514
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (13, 2025-08-11 15:59:32.006901, 2025-08-11 15:59:32.006901, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (13, 2025-08-11 15:59:32.006901, 2025-08-11 15:59:32.006901, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [notifications_notification_type_check]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at rw.health.ubuzima.controller.HealthWorkerController.triggerAppointmentStatusUpdate(HealthWorkerController.java:1320)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at rw.health.ubuzima.controller.HealthWorkerController$$SpringCGLIB$$0.triggerAppointmentStatusUpdate(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (13, 2025-08-11 15:59:32.006901, 2025-08-11 15:59:32.006901, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:97)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 163 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (13, 2025-08-11 15:59:32.006901, 2025-08-11 15:59:32.006901, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 218 common frames omitted
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated SCHEDULED appointment 3 to NO_SHOW status (immediate)
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 25P02
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: current transaction is aborted, commands ignored until end of transaction block
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.orm.jpa.JpaSystemException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:101)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at rw.health.ubuzima.controller.HealthWorkerController.triggerAppointmentStatusUpdate(HealthWorkerController.java:1320)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at rw.health.ubuzima.controller.HealthWorkerController$$SpringCGLIB$$0.triggerAppointmentStatusUpdate(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at jdk.internal.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 163 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: current transaction is aborted, commands ignored until end of transaction block
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 216 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (13, 2025-08-11 15:59:32.006901, 2025-08-11 15:59:32.006901, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	... 153 common frames omitted
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated CONFIRMED appointment 1 to NO_SHOW status (15min grace)
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 2 overdue appointments to NO_SHOW (1 scheduled, 1 confirmed)
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] ERROR org.hibernate.AssertionFailure - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
2025-08-11 15:59:32 [http-nio-0.0.0.0-8080-exec-5] ERROR r.h.u.s.AppointmentStatusSchedulerService - Error during scheduled appointment status update
org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.checkId(DefaultFlushEntityEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.getValues(DefaultFlushEntityEventListener.java:179)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.onFlushEntity(DefaultFlushEntityEventListener.java:138)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:226)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:90)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:52)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1366)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:136)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy187.findByStatusAndScheduledDateBetween(Unknown Source)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentsToInProgress(AppointmentStatusSchedulerService.java:124)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at rw.health.ubuzima.controller.HealthWorkerController.triggerAppointmentStatusUpdate(HealthWorkerController.java:1320)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at rw.health.ubuzima.controller.HealthWorkerController$$SpringCGLIB$$0.triggerAppointmentStatusUpdate(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/dashboard/stats
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/clients
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversations?userId=2
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/appointments
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/unread?userId=2
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/clients
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/dashboard/stats
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversations?userId=2
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/appointments
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/unread?userId=2
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.village = :village 
        AND u.role = 'CLIENT' 
        AND u.status = 'ACTIVE' */ select
            u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.village=? 
            and u1_0.role='CLIENT' 
            and u1_0.status='ACTIVE'
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false 
        order by
            m1_0.created_at desc
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    WHERE
        u.id IN (SELECT
            DISTINCT m.receiver.id 
        FROM
            Message m 
        WHERE
            m.sender = :user 
        UNION
        SELECT
            DISTINCT m.sender.id 
        FROM
            Message m 
        WHERE
            m.receiver = :user 
            AND m.sender != :user) */ select
            distinct u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.id in (select
                distinct m1_0.receiver_id 
            from
                messages m1_0 
            where
                m1_0.sender_id=? 
            union
            select
                distinct m2_0.sender_id 
            from
                messages m2_0 
            where
                m2_0.receiver_id=? 
                and m2_0.sender_id<>?)
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.village=? 
        and u1_0.role=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false */ select
            count(m1_0.id) 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt ASC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 15:59:33 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 15:59:49 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/3
2025-08-11 15:59:49 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/3
2025-08-11 15:59:49 [http-nio-0.0.0.0-8080-exec-7] ERROR rw.health.ubuzima.config.WebConfig - Error handling request: GET /api/v1/appointments/3
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/3': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:59:49 [http-nio-0.0.0.0-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api/v1] threw exception [Request processing failed: java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/3': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}] with root cause
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/3': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:59:50 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-11 15:59:50 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-11 15:59:50 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-11 15:59:53 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/3
2025-08-11 15:59:53 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/3
2025-08-11 15:59:53 [http-nio-0.0.0.0-8080-exec-8] ERROR rw.health.ubuzima.config.WebConfig - Error handling request: GET /api/v1/appointments/3
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/3': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:59:53 [http-nio-0.0.0.0-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api/v1] threw exception [Request processing failed: java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/3': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}] with root cause
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/3': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:59:53 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-11 15:59:53 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-11 15:59:53 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:00:04 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:00:33 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:01:08 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 16:01:08 [MessageBroker-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23514
2025-08-11 16:01:08 [MessageBroker-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (16, 2025-08-11 16:01:08.567631, 2025-08-11 16:01:08.567631, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
2025-08-11 16:01:08 [MessageBroker-3] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (16, 2025-08-11 16:01:08.567631, 2025-08-11 16:01:08.567631, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [notifications_notification_type_check]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (16, 2025-08-11 16:01:08.567631, 2025-08-11 16:01:08.567631, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:97)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at jdk.internal.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (16, 2025-08-11 16:01:08.567631, 2025-08-11 16:01:08.567631, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 89 common frames omitted
2025-08-11 16:01:08 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated SCHEDULED appointment 3 to NO_SHOW status (immediate)
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 16:01:08 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 16:01:08 [MessageBroker-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 25P02
2025-08-11 16:01:08 [MessageBroker-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ERROR: current transaction is aborted, commands ignored until end of transaction block
2025-08-11 16:01:08 [MessageBroker-3] ERROR r.h.u.s.i.PushNotificationServiceImpl - Failed to send push notification to user: 2
org.springframework.orm.jpa.JpaSystemException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:341)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:101)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute statement [ERROR: current transaction is aborted, commands ignored until end of transaction block] [/* insert for rw.health.ubuzima.entity.Notification */insert into notifications (action_url,created_at,icon,is_read,message,metadata,priority,read_at,scheduled_for,sent_at,title,notification_type,updated_at,user_id,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at jdk.internal.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 41 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: current transaction is aborted, commands ignored until end of transaction block
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 89 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: new row for relation "notifications" violates check constraint "notifications_notification_type_check"
  Detail: Failing row contains (16, 2025-08-11 16:01:08.567631, 2025-08-11 16:01:08.567631, 0, null, null, f, Client Grace Mukamana did not show up for their other appointmen..., null, 1, null, null, null, Appointment No-Show, PUSH, 2).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at jdk.internal.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy170.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at rw.health.ubuzima.service.impl.PushNotificationServiceImpl.sendNotificationToUser(PushNotificationServiceImpl.java:47)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.notifyHealthWorkerAboutNoShow(AppointmentStatusSchedulerService.java:232)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateOverdueAppointments(AppointmentStatusSchedulerService.java:85)
	... 31 common frames omitted
2025-08-11 16:01:08 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated CONFIRMED appointment 1 to NO_SHOW status (15min grace)
2025-08-11 16:01:08 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 2 overdue appointments to NO_SHOW (1 scheduled, 1 confirmed)
2025-08-11 16:01:08 [MessageBroker-3] ERROR org.hibernate.AssertionFailure - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
2025-08-11 16:01:08 [MessageBroker-3] ERROR r.h.u.s.AppointmentStatusSchedulerService - Error during scheduled appointment status update
org.hibernate.AssertionFailure: null id in rw.health.ubuzima.entity.Notification entry (don't flush the Session after an exception occurs)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.checkId(DefaultFlushEntityEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.getValues(DefaultFlushEntityEventListener.java:179)
	at org.hibernate.event.internal.DefaultFlushEntityEventListener.onFlushEntity(DefaultFlushEntityEventListener.java:138)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:226)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:90)
	at org.hibernate.event.internal.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:52)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.autoFlushIfRequired(SessionImpl.java:1366)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:136)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy187.findByStatusAndScheduledDateBetween(Unknown Source)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentsToInProgress(AppointmentStatusSchedulerService.java:124)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService.updateAppointmentStatuses(AppointmentStatusSchedulerService.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 16:01:08 [MessageBroker-3] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:803)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:676)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:426)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at rw.health.ubuzima.service.AppointmentStatusSchedulerService$$SpringCGLIB$$0.updateAppointmentStatuses(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:03:13 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:13:06 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-08-11 16:13:06 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@6890ca0d]]
2025-08-11 16:13:06 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-08-11 16:13:08 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 16:13:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 16:13:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 16:13:49 [main] INFO  r.health.ubuzima.UbuzimaApplication - Starting UbuzimaApplication using Java 17.0.15 with PID 21364 (C:\WEB\develop\backend\target\classes started by tganz in C:\WEB\develop\backend)
2025-08-11 16:13:49 [main] DEBUG r.health.ubuzima.UbuzimaApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-08-11 16:13:49 [main] INFO  r.health.ubuzima.UbuzimaApplication - The following 1 profile is active: "dev"
2025-08-11 16:13:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 16:13:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 106 ms. Found 24 JPA repository interfaces.
2025-08-11 16:13:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 16:13:55 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 16:13:55 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-08-11 16:13:55 [main] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-08-11 16:13:55 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5956 ms
2025-08-11 16:13:55 [main] DEBUG r.h.ubuzima.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
2025-08-11 16:13:55 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 16:13:55 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-11 16:13:55 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 16:13:56 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 16:13:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 16:13:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@332fa1c
2025-08-11 16:13:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 16:13:56 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-11 16:13:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 16:13:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 16:13:59 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 16:14:01 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 16:14:01 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 70c100ae-39b6-49f4-8ad1-12559483eab1

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-11 16:14:02 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-11 16:14:02 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@432b7b7d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@13083c50, org.springframework.security.web.context.SecurityContextHolderFilter@19ebd341, org.springframework.security.web.header.HeaderWriterFilter@5fd3d56d, org.springframework.web.filter.CorsFilter@3021735, org.springframework.security.web.authentication.logout.LogoutFilter@326422bf, rw.health.ubuzima.security.JwtAuthFilter@35becbd4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@694d4f27, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@e09a9a0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55675691, org.springframework.security.web.session.SessionManagementFilter@1562ea4d, org.springframework.security.web.access.ExceptionTranslationFilter@7bdc9fc8, org.springframework.security.web.access.intercept.AuthorizationFilter@b511b64]
2025-08-11 16:14:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-08-11 16:14:03 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-08-11 16:14:03 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3a47537]]
2025-08-11 16:14:03 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-08-11 16:14:03 [main] INFO  r.health.ubuzima.UbuzimaApplication - Started UbuzimaApplication in 15.469 seconds (process running for 20.289)
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 16:14:03 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:14:03 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 16:14:03 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 16:14:03 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        HealthFacility x */ select
            count(*) 
        from
            health_facilities hf1_0
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:14:03 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        el1_0.id,
        el1_0.audio_url,
        el1_0.author,
        el1_0.category,
        el1_0.content,
        el1_0.created_at,
        el1_0.description,
        el1_0.duration_minutes,
        el1_0.is_published,
        el1_0.language,
        el1_0.level,
        el1_0.order_index,
        el1_0.title,
        el1_0.updated_at,
        el1_0.version,
        el1_0.video_url,
        el1_0.view_count 
    from
        education_lessons el1_0
2025-08-11 16:14:03 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:14:03 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ContraceptionMethod x */ select
            count(*) 
        from
            contraception_methods cm1_0
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:14:03 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        MenstrualCycle x */ select
            count(*) 
        from
            menstrual_cycles mc1_0
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:14:03 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 16:14:03 [MessageBroker-1] WARN  r.h.u.s.i.PushNotificationServiceImpl - Firebase messaging not configured. Push notification not sent to user: 2
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.i.PushNotificationServiceImpl - Push notification sent to user: 2
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated SCHEDULED appointment 3 to NO_SHOW status (immediate)
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Notification */insert 
    into
        notifications (action_url, created_at, icon, is_read, message, metadata, priority, read_at, scheduled_for, sent_at, title, notification_type, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 16:14:03 [MessageBroker-1] WARN  r.h.u.s.i.PushNotificationServiceImpl - Firebase messaging not configured. Push notification not sent to user: 2
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.i.PushNotificationServiceImpl - Push notification sent to user: 2
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated CONFIRMED appointment 1 to NO_SHOW status (15min grace)
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 2 overdue appointments to NO_SHOW (1 scheduled, 1 confirmed)
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* update
        for rw.health.ubuzima.entity.Appointment */update appointments 
    set
        appointment_type=?,
        cancellation_reason=?,
        cancelled_at=?,
        completed_at=?,
        duration_minutes=?,
        health_facility_id=?,
        health_worker_id=?,
        notes=?,
        reason=?,
        reminder_sent=?,
        scheduled_date=?,
        status=?,
        updated_at=?,
        user_id=?,
        version=? 
    where
        id=? 
        and version=?
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* update
        for rw.health.ubuzima.entity.Appointment */update appointments 
    set
        appointment_type=?,
        cancellation_reason=?,
        cancelled_at=?,
        completed_at=?,
        duration_minutes=?,
        health_facility_id=?,
        health_worker_id=?,
        notes=?,
        reason=?,
        reminder_sent=?,
        scheduled_date=?,
        status=?,
        updated_at=?,
        user_id=?,
        version=? 
    where
        id=? 
        and version=?
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 16:14:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 16:14:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 16:14:03 [RMI TCP Connection(2)-192.168.1.75] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 16:14:03 [RMI TCP Connection(2)-192.168.1.75] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 16:14:03 [RMI TCP Connection(2)-192.168.1.75] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:14:33 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:15:03 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 1, completed tasks = 1]
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /messages
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /messages
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        rw.health.ubuzima.entity.Message */insert 
    into
        messages (audio_duration, audio_url, content, conversation_id, created_at, deleted_at, deleted_for_everyone, delivered_at, edited_at, file_size, forwarded_from, is_emergency, is_forwarded, is_read, message_status, message_type, metadata, mime_type, priority, quoted_message_id, reaction, read_at, receiver_id, reply_to_id, sender_id, starred, thumbnail_url, updated_at, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:15:55 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:18:29 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:29:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 16:29:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:29:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:29:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 16:29:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 16:29:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 16:29:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 16:29:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 16:29:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 16:29:03 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 16:29:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 16:29:03 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:17 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:26 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:34:42 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 16:34:42 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 16:34:42 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:34:42 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:34:42 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /notifications?userId=2&page=0&limit=20
2025-08-11 16:34:42 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /notifications?userId=2&page=0&limit=20
2025-08-11 16:34:42 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:34:42 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:34:42 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        n1_0.id,
        n1_0.action_url,
        n1_0.created_at,
        n1_0.icon,
        n1_0.is_read,
        n1_0.message,
        n1_0.metadata,
        n1_0.priority,
        n1_0.read_at,
        n1_0.scheduled_for,
        n1_0.sent_at,
        n1_0.title,
        n1_0.notification_type,
        n1_0.updated_at,
        n1_0.user_id,
        n1_0.version 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
    order by
        n1_0.created_at desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:35:19 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:02 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:36:15 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 16:44:03 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 16:44:03 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:44:03 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:44:03 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 16:44:03 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 16:44:03 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 16:44:03 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 16:44:03 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 16:44:03 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 16:44:03 [MessageBroker-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 16:44:03 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 16:44:03 [MessageBroker-2] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 16:45:03 [MessageBroker-4] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 1, completed tasks = 4]
2025-08-11 16:59:03 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 16:59:03 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:59:03 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 16:59:03 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 16:59:03 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 16:59:03 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 16:59:03 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 16:59:03 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 16:59:03 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 16:59:03 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 16:59:03 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 16:59:03 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:00:11 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:06:30 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:09:59 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:09:59 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:09:59 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:09:59 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:09:59 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:10:00 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:10:00 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 17:10:00 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:10:00 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:10:00 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:10:00 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:10:00 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:11:43 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 17:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 17:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 17:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 17:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 17:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 17:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 17:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 17:15:03 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 9, active threads = 1, queued tasks = 1, completed tasks = 7]
2025-08-11 17:16:34 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 17:16:34 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 17:16:34 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:34 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /health-worker/appointments/update-statuses
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /health-worker/appointments/update-statuses
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 17:16:36 [http-nio-0.0.0.0-8080-exec-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/dashboard/stats
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/dashboard/stats
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/clients
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/appointments
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/appointments
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/clients
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/unread?userId=2
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversations?userId=2
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversations?userId=2
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/unread?userId=2
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.village = :village 
        AND u.role = 'CLIENT' 
        AND u.status = 'ACTIVE' */ select
            u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.village=? 
            and u1_0.role='CLIENT' 
            and u1_0.status='ACTIVE'
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false 
        order by
            m1_0.created_at desc
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false */ select
            count(m1_0.id) 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    WHERE
        u.id IN (SELECT
            DISTINCT m.receiver.id 
        FROM
            Message m 
        WHERE
            m.sender = :user 
        UNION
        SELECT
            DISTINCT m.sender.id 
        FROM
            Message m 
        WHERE
            m.receiver = :user 
            AND m.sender != :user) */ select
            distinct u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.id in (select
                distinct m1_0.receiver_id 
            from
                messages m1_0 
            where
                m1_0.sender_id=? 
            union
            select
                distinct m2_0.sender_id 
            from
                messages m2_0 
            where
                m2_0.receiver_id=? 
                and m2_0.sender_id<>?)
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt ASC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.village=? 
        and u1_0.role=?
2025-08-11 17:16:37 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:16:48 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:29:03 [MessageBroker-6] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 17:29:03 [MessageBroker-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:29:03 [MessageBroker-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:29:03 [MessageBroker-6] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 17:29:03 [MessageBroker-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 17:29:03 [MessageBroker-6] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 17:29:03 [MessageBroker-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 17:29:03 [MessageBroker-6] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 17:29:03 [MessageBroker-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:29:03 [MessageBroker-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:29:03 [MessageBroker-6] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 17:29:03 [MessageBroker-6] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 17:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 17:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 17:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 17:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 17:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 17:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 17:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 17:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 17:45:03 [MessageBroker-3] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 12, active threads = 1, queued tasks = 1, completed tasks = 10]
2025-08-11 17:55:39 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 17:55:39 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 17:55:39 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:55:39 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /health-worker/appointments/update-statuses
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /health-worker/appointments/update-statuses
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 17:55:43 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 17:55:45 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/dashboard/stats
2025-08-11 17:55:45 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/dashboard/stats
2025-08-11 17:55:45 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:55:45 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:55:45 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.village = :village 
        AND u.role = 'CLIENT' 
        AND u.status = 'ACTIVE' */ select
            u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.village=? 
            and u1_0.role='CLIENT' 
            and u1_0.status='ACTIVE'
2025-08-11 17:55:45 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 17:55:45 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/clients
2025-08-11 17:55:45 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/clients
2025-08-11 17:55:45 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/appointments
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversations?userId=2
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/unread?userId=2
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/appointments
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/unread?userId=2
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversations?userId=2
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    WHERE
        u.id IN (SELECT
            DISTINCT m.receiver.id 
        FROM
            Message m 
        WHERE
            m.sender = :user 
        UNION
        SELECT
            DISTINCT m.sender.id 
        FROM
            Message m 
        WHERE
            m.receiver = :user 
            AND m.sender != :user) */ select
            distinct u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.id in (select
                distinct m1_0.receiver_id 
            from
                messages m1_0 
            where
                m1_0.sender_id=? 
            union
            select
                distinct m2_0.sender_id 
            from
                messages m2_0 
            where
                m2_0.receiver_id=? 
                and m2_0.sender_id<>?)
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false 
        order by
            m1_0.created_at desc
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt ASC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false */ select
            count(m1_0.id) 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.village=? 
        and u1_0.role=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:55:46 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 17:59:03 [MessageBroker-8] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 17:59:03 [MessageBroker-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:59:03 [MessageBroker-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 17:59:03 [MessageBroker-8] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 17:59:03 [MessageBroker-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 17:59:03 [MessageBroker-8] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 17:59:03 [MessageBroker-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 17:59:03 [MessageBroker-8] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 17:59:03 [MessageBroker-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:59:03 [MessageBroker-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 17:59:03 [MessageBroker-8] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 17:59:03 [MessageBroker-8] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 18:14:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 18:14:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:14:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:14:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 18:14:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 18:14:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 18:14:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 18:14:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 18:14:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:14:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:14:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 18:14:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 18:15:03 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 14, active threads = 1, queued tasks = 1, completed tasks = 13]
2025-08-11 18:29:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 18:29:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:29:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:29:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 18:29:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 18:29:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 18:29:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 18:29:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 18:29:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:29:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:29:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 18:29:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 18:44:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 18:44:04 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:44:04 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:44:04 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 18:44:04 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 18:44:04 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 18:44:04 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 18:44:04 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 18:44:04 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:44:04 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:44:04 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 18:44:04 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 18:45:03 [MessageBroker-10] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 14, active threads = 1, queued tasks = 1, completed tasks = 16]
2025-08-11 18:57:01 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 18:57:02 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 18:57:02 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:57:02 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:57:05 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /health-worker/appointments/update-statuses
2025-08-11 18:57:05 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /health-worker/appointments/update-statuses
2025-08-11 18:57:05 [http-nio-0.0.0.0-8080-exec-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 18:57:06 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:57:06 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:57:06 [http-nio-0.0.0.0-8080-exec-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 18:57:06 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 18:57:06 [http-nio-0.0.0.0-8080-exec-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 18:57:06 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 18:57:06 [http-nio-0.0.0.0-8080-exec-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 18:57:07 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:57:07 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:57:07 [http-nio-0.0.0.0-8080-exec-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 18:57:07 [http-nio-0.0.0.0-8080-exec-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/dashboard/stats
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/clients
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/dashboard/stats
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/appointments
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversations?userId=2
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/clients
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/unread?userId=2
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/appointments
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversations?userId=2
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/unread?userId=2
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.village = :village 
        AND u.role = 'CLIENT' 
        AND u.status = 'ACTIVE' */ select
            u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.village=? 
            and u1_0.role='CLIENT' 
            and u1_0.status='ACTIVE'
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 18:57:08 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:57:09 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    WHERE
        u.id IN (SELECT
            DISTINCT m.receiver.id 
        FROM
            Message m 
        WHERE
            m.sender = :user 
        UNION
        SELECT
            DISTINCT m.sender.id 
        FROM
            Message m 
        WHERE
            m.receiver = :user 
            AND m.sender != :user) */ select
            distinct u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.id in (select
                distinct m1_0.receiver_id 
            from
                messages m1_0 
            where
                m1_0.sender_id=? 
            union
            select
                distinct m2_0.sender_id 
            from
                messages m2_0 
            where
                m2_0.receiver_id=? 
                and m2_0.sender_id<>?)
2025-08-11 18:57:09 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false 
        order by
            m1_0.created_at desc
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false */ select
            count(m1_0.id) 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.village=? 
        and u1_0.role=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt ASC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:57:10 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:57:12 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 18:57:12 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 18:57:12 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 18:59:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 18:59:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:59:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 18:59:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 18:59:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 18:59:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 18:59:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 18:59:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 18:59:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:59:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 18:59:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 18:59:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 18:59:55 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 18:59:55 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 18:59:56 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:59:56 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:59:57 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /notifications?userId=2&page=0&limit=20
2025-08-11 18:59:57 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /notifications?userId=2&page=0&limit=20
2025-08-11 18:59:57 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 18:59:57 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 18:59:57 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        n1_0.id,
        n1_0.action_url,
        n1_0.created_at,
        n1_0.icon,
        n1_0.is_read,
        n1_0.message,
        n1_0.metadata,
        n1_0.priority,
        n1_0.read_at,
        n1_0.scheduled_for,
        n1_0.sent_at,
        n1_0.title,
        n1_0.notification_type,
        n1_0.updated_at,
        n1_0.user_id,
        n1_0.version 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
    order by
        n1_0.created_at desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /community-events
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /community-events/created
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /community-events
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /community-events/created
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.CommunityEventController.getCreatedEvents(); target is of class [rw.health.ubuzima.controller.CommunityEventController]
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-5] INFO  r.h.u.c.CommunityEventController - Received request to get all community events
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.CommunityEventController.getCreatedEvents(); target is of class [rw.health.ubuzima.controller.CommunityEventController]
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-6] DEBUG r.h.u.service.CommunityEventService - Fetching events created by user: healthworker@ubuzima.rw
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ce1_0.id,
        ce1_0.contact_info,
        ce1_0.created_at,
        ce1_0.current_participants,
        ce1_0.description,
        ce1_0.end_date,
        ce1_0.event_date,
        ce1_0.is_active,
        ce1_0.is_cancelled,
        ce1_0.is_virtual,
        ce1_0.location,
        ce1_0.max_participants,
        ce1_0.organizer_id,
        ce1_0.registration_deadline,
        ce1_0.registration_required,
        ce1_0.title,
        ce1_0.type,
        ce1_0.updated_at,
        ce1_0.virtual_link 
    from
        community_events ce1_0 
    where
        ce1_0.is_active 
        and not(ce1_0.is_cancelled) 
    order by
        ce1_0.event_date
2025-08-11 19:01:02 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ce 
    FROM
        CommunityEvent ce 
    WHERE
        ce.organizer.id = :organizerId 
    ORDER BY
        ce.eventDate DESC */ select
            ce1_0.id,
            ce1_0.contact_info,
            ce1_0.created_at,
            ce1_0.current_participants,
            ce1_0.description,
            ce1_0.end_date,
            ce1_0.event_date,
            ce1_0.is_active,
            ce1_0.is_cancelled,
            ce1_0.is_virtual,
            ce1_0.location,
            ce1_0.max_participants,
            ce1_0.organizer_id,
            ce1_0.registration_deadline,
            ce1_0.registration_required,
            ce1_0.title,
            ce1_0.type,
            ce1_0.updated_at,
            ce1_0.virtual_link 
        from
            community_events ce1_0 
        where
            ce1_0.organizer_id=? 
        order by
            ce1_0.event_date desc
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 19:03:49 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 19:04:07 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/2
2025-08-11 19:04:07 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/2
2025-08-11 19:04:07 [http-nio-0.0.0.0-8080-exec-1] ERROR rw.health.ubuzima.config.WebConfig - Error handling request: GET /api/v1/appointments/2
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/2': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 19:04:07 [http-nio-0.0.0.0-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api/v1] threw exception [Request processing failed: java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/2': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}] with root cause
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/2': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 19:04:07 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-11 19:04:07 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-11 19:04:08 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-11 19:05:27 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 19:05:27 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 19:05:27 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 19:05:27 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 19:05:28 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /notifications?userId=2&page=0&limit=20
2025-08-11 19:05:28 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /notifications?userId=2&page=0&limit=20
2025-08-11 19:05:28 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 19:05:28 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 19:05:28 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        n1_0.id,
        n1_0.action_url,
        n1_0.created_at,
        n1_0.icon,
        n1_0.is_read,
        n1_0.message,
        n1_0.metadata,
        n1_0.priority,
        n1_0.read_at,
        n1_0.scheduled_for,
        n1_0.sent_at,
        n1_0.title,
        n1_0.notification_type,
        n1_0.updated_at,
        n1_0.user_id,
        n1_0.version 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
    order by
        n1_0.created_at desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-11 19:05:47 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 19:05:48 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 19:05:48 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 19:05:48 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 19:05:48 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /notifications?userId=2&page=0&limit=20
2025-08-11 19:05:48 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /notifications?userId=2&page=0&limit=20
2025-08-11 19:05:48 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 19:05:48 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 19:05:48 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        n1_0.id,
        n1_0.action_url,
        n1_0.created_at,
        n1_0.icon,
        n1_0.is_read,
        n1_0.message,
        n1_0.metadata,
        n1_0.priority,
        n1_0.read_at,
        n1_0.scheduled_for,
        n1_0.sent_at,
        n1_0.title,
        n1_0.notification_type,
        n1_0.updated_at,
        n1_0.user_id,
        n1_0.version 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
    order by
        n1_0.created_at desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-11 19:14:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 19:14:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 19:14:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 19:14:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 19:14:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 19:14:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 19:14:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 19:14:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 19:14:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 19:14:03 [MessageBroker-11] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 19:14:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 19:14:03 [MessageBroker-11] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 19:15:03 [MessageBroker-4] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 14, active threads = 1, queued tasks = 1, completed tasks = 19]
2025-08-11 19:29:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 19:29:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 19:29:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 19:29:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 19:29:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 19:29:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 19:29:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 19:29:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 19:29:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 19:29:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 19:29:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 19:29:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 19:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 19:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 19:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 19:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 19:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 19:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 19:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 19:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 19:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 19:44:03 [MessageBroker-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 19:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 19:44:03 [MessageBroker-7] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 19:45:03 [MessageBroker-13] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 14, active threads = 1, queued tasks = 1, completed tasks = 22]
2025-08-11 19:59:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 19:59:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 19:59:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 19:59:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 19:59:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 19:59:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 19:59:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 19:59:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 19:59:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 19:59:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 19:59:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 19:59:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 20:14:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 20:14:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 20:14:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 20:14:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 20:14:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 20:14:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 20:14:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 20:14:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 20:14:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 20:14:03 [MessageBroker-14] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 20:14:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 20:14:03 [MessageBroker-14] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 20:15:03 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 14, active threads = 1, queued tasks = 1, completed tasks = 25]
2025-08-11 20:29:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 20:29:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 20:29:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 20:29:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 20:29:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 20:29:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 20:29:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 20:29:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 20:29:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 20:29:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 20:29:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 20:29:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 20:44:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 20:44:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 20:44:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 20:44:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 20:44:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 20:44:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 20:44:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 20:44:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 20:44:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 20:44:03 [MessageBroker-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 20:44:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 20:44:03 [MessageBroker-9] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 20:45:03 [MessageBroker-12] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 14, active threads = 1, queued tasks = 1, completed tasks = 28]
2025-08-11 20:59:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 20:59:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 20:59:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 20:59:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 20:59:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 20:59:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 20:59:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 20:59:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 20:59:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 20:59:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 20:59:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 20:59:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 21:10:16 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 21:10:16 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 21:10:16 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:17 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /health-worker/appointments/update-statuses
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /health-worker/appointments/update-statuses
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 21:10:19 [http-nio-0.0.0.0-8080-exec-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/dashboard/stats
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/dashboard/stats
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/clients
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/appointments
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversations?userId=2
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/unread?userId=2
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/clients
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/appointments
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/unread?userId=2
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversations?userId=2
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.village = :village 
        AND u.role = 'CLIENT' 
        AND u.status = 'ACTIVE' */ select
            u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.village=? 
            and u1_0.role='CLIENT' 
            and u1_0.status='ACTIVE'
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    WHERE
        u.id IN (SELECT
            DISTINCT m.receiver.id 
        FROM
            Message m 
        WHERE
            m.sender = :user 
        UNION
        SELECT
            DISTINCT m.sender.id 
        FROM
            Message m 
        WHERE
            m.receiver = :user 
            AND m.sender != :user) */ select
            distinct u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.id in (select
                distinct m1_0.receiver_id 
            from
                messages m1_0 
            where
                m1_0.sender_id=? 
            union
            select
                distinct m2_0.sender_id 
            from
                messages m2_0 
            where
                m2_0.receiver_id=? 
                and m2_0.sender_id<>?)
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false 
        order by
            m1_0.created_at desc
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.village=? 
        and u1_0.role=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    WHERE
        m.receiver = :user 
        AND m.isRead = false */ select
            count(m1_0.id) 
        from
            messages m1_0 
        where
            m1_0.receiver_id=? 
            and m1_0.is_read=false
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt ASC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 21:10:20 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversation/2/3?page=0&size=50
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversation/2/3?page=0&size=50
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt DESC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at desc 
        offset
            ? rows 
        fetch
            first ? rows only
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 21:10:34 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.message_id,
        a1_0.attachment_url 
    from
        message_attachments a1_0 
    where
        a1_0.message_id=?
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /community-events
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /community-events/created
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /community-events/created
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /community-events
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-3] INFO  r.h.u.c.CommunityEventController - Received request to get all community events
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.CommunityEventController.getCreatedEvents(); target is of class [rw.health.ubuzima.controller.CommunityEventController]
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.CommunityEventController.getCreatedEvents(); target is of class [rw.health.ubuzima.controller.CommunityEventController]
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-8] DEBUG r.h.u.service.CommunityEventService - Fetching events created by user: healthworker@ubuzima.rw
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ce1_0.id,
        ce1_0.contact_info,
        ce1_0.created_at,
        ce1_0.current_participants,
        ce1_0.description,
        ce1_0.end_date,
        ce1_0.event_date,
        ce1_0.is_active,
        ce1_0.is_cancelled,
        ce1_0.is_virtual,
        ce1_0.location,
        ce1_0.max_participants,
        ce1_0.organizer_id,
        ce1_0.registration_deadline,
        ce1_0.registration_required,
        ce1_0.title,
        ce1_0.type,
        ce1_0.updated_at,
        ce1_0.virtual_link 
    from
        community_events ce1_0 
    where
        ce1_0.is_active 
        and not(ce1_0.is_cancelled) 
    order by
        ce1_0.event_date
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:12:01 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        ce 
    FROM
        CommunityEvent ce 
    WHERE
        ce.organizer.id = :organizerId 
    ORDER BY
        ce.eventDate DESC */ select
            ce1_0.id,
            ce1_0.contact_info,
            ce1_0.created_at,
            ce1_0.current_participants,
            ce1_0.description,
            ce1_0.end_date,
            ce1_0.event_date,
            ce1_0.is_active,
            ce1_0.is_cancelled,
            ce1_0.is_virtual,
            ce1_0.location,
            ce1_0.max_participants,
            ce1_0.organizer_id,
            ce1_0.registration_deadline,
            ce1_0.registration_required,
            ce1_0.title,
            ce1_0.type,
            ce1_0.updated_at,
            ce1_0.virtual_link 
        from
            community_events ce1_0 
        where
            ce1_0.organizer_id=? 
        order by
            ce1_0.event_date desc
2025-08-11 21:12:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/2
2025-08-11 21:12:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/2
2025-08-11 21:12:27 [http-nio-0.0.0.0-8080-exec-7] ERROR rw.health.ubuzima.config.WebConfig - Error handling request: GET /api/v1/appointments/2
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/2': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 21:12:27 [http-nio-0.0.0.0-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api/v1] threw exception [Request processing failed: java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/2': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}] with root cause
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/2': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 21:12:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-11 21:12:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-11 21:12:27 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-11 21:12:46 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/time-slots?date=2025-08-11
2025-08-11 21:12:46 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/time-slots?date=2025-08-11
2025-08-11 21:12:46 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:12:46 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:12:46 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        ts 
    FROM
        TimeSlot ts 
    WHERE
        ts.healthWorker = :healthWorker 
        AND DATE(ts.startTime) = :date */ select
            ts1_0.id,
            ts1_0.created_at,
            ts1_0.current_appointments,
            ts1_0.end_time,
            ts1_0.health_facility_id,
            ts1_0.health_worker_id,
            ts1_0.is_available,
            ts1_0.max_appointments,
            ts1_0.reason,
            ts1_0.start_time,
            ts1_0.updated_at,
            ts1_0.version 
        from
            time_slots ts1_0 
        where
            ts1_0.health_worker_id=? 
            and date(ts1_0.start_time)=?
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/side-effect-reports
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/clients
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/side-effect-reports
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/clients
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:13:44 [http-nio-0.0.0.0-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.village=? 
        and u1_0.role=?
2025-08-11 21:13:56 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 21:13:56 [http-nio-0.0.0.0-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 21:13:56 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:13:56 [http-nio-0.0.0.0-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:13:56 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /notifications?userId=2&page=0&limit=20
2025-08-11 21:13:56 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /notifications?userId=2&page=0&limit=20
2025-08-11 21:13:56 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:13:56 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:13:56 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        n1_0.id,
        n1_0.action_url,
        n1_0.created_at,
        n1_0.icon,
        n1_0.is_read,
        n1_0.message,
        n1_0.metadata,
        n1_0.priority,
        n1_0.read_at,
        n1_0.scheduled_for,
        n1_0.sent_at,
        n1_0.title,
        n1_0.notification_type,
        n1_0.updated_at,
        n1_0.user_id,
        n1_0.version 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
    order by
        n1_0.created_at desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-11 21:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 21:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 21:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 21:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 21:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 21:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 21:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 21:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 21:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 21:14:03 [MessageBroker-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 21:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 21:14:03 [MessageBroker-5] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 21:15:03 [MessageBroker-8] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 14, active threads = 1, queued tasks = 1, completed tasks = 31]
2025-08-11 21:16:56 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/2
2025-08-11 21:16:56 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/2
2025-08-11 21:16:56 [http-nio-0.0.0.0-8080-exec-7] ERROR rw.health.ubuzima.config.WebConfig - Error handling request: GET /api/v1/appointments/2
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/2': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 21:16:56 [http-nio-0.0.0.0-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api/v1] threw exception [Request processing failed: java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/2': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}] with root cause
java.lang.IllegalStateException: Ambiguous handler methods mapped for '/api/v1/appointments/2': {public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointmentDetails(java.lang.Long), public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.AppointmentController.getAppointment(java.lang.Long)}
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:431)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:382)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:127)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:68)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:507)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1283)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1065)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 21:16:56 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-11 21:16:56 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-11 21:16:56 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-11 21:19:53 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/profile
2025-08-11 21:19:53 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/profile
2025-08-11 21:19:53 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:19:53 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:19:54 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /notifications?userId=2&page=0&limit=20
2025-08-11 21:19:54 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /notifications?userId=2&page=0&limit=20
2025-08-11 21:19:54 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:19:54 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:19:54 [http-nio-0.0.0.0-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        n1_0.id,
        n1_0.action_url,
        n1_0.created_at,
        n1_0.icon,
        n1_0.is_read,
        n1_0.message,
        n1_0.metadata,
        n1_0.priority,
        n1_0.read_at,
        n1_0.scheduled_for,
        n1_0.sent_at,
        n1_0.title,
        n1_0.notification_type,
        n1_0.updated_at,
        n1_0.user_id,
        n1_0.version 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
    order by
        n1_0.created_at desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-11 21:27:49 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-08-11 21:27:49 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3a47537]]
2025-08-11 21:27:49 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-08-11 21:27:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 21:27:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 21:27:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 21:41:28 [main] INFO  r.health.ubuzima.UbuzimaApplication - Starting UbuzimaApplication using Java 17.0.15 with PID 17952 (C:\WEB\develop\backend\target\classes started by tganz in C:\WEB\develop\backend)
2025-08-11 21:41:28 [main] DEBUG r.health.ubuzima.UbuzimaApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-08-11 21:41:28 [main] INFO  r.health.ubuzima.UbuzimaApplication - The following 1 profile is active: "dev"
2025-08-11 21:41:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 21:41:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 149 ms. Found 25 JPA repository interfaces.
2025-08-11 21:41:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 21:41:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 21:41:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-08-11 21:41:32 [main] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-08-11 21:41:32 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3921 ms
2025-08-11 21:41:32 [main] DEBUG r.h.ubuzima.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
2025-08-11 21:41:32 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 21:41:32 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-11 21:41:32 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 21:41:32 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 21:41:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 21:41:33 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68a94e58
2025-08-11 21:41:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 21:41:33 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-11 21:41:35 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 21:41:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 21:41:36 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 21:41:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 21:41:39 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 1cdc97ea-3fa2-4d66-96d5-43a0405d64e7

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-11 21:41:40 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-08-11 21:41:40 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@75222b82, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a08ea5e, org.springframework.security.web.context.SecurityContextHolderFilter@3e10dc18, org.springframework.security.web.header.HeaderWriterFilter@25d35dec, org.springframework.web.filter.CorsFilter@5ef69ace, org.springframework.security.web.authentication.logout.LogoutFilter@5577c1ea, rw.health.ubuzima.security.JwtAuthFilter@15371de2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11f5ae46, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@354b5123, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@235f7a92, org.springframework.security.web.session.SessionManagementFilter@5fe15460, org.springframework.security.web.access.ExceptionTranslationFilter@743cfb82, org.springframework.security.web.access.intercept.AuthorizationFilter@6dd17f15]
2025-08-11 21:41:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-08-11 21:41:41 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-08-11 21:41:41 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@76592c22]]
2025-08-11 21:41:41 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-08-11 21:41:41 [main] INFO  r.health.ubuzima.UbuzimaApplication - Started UbuzimaApplication in 13.86 seconds (process running for 14.834)
2025-08-11 21:41:41 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 21:41:41 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 21:41:41 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 21:41:41 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 21:41:41 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 21:41:41 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 21:41:41 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-11 21:41:41 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 21:41:41 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 21:41:41 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 21:41:41 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 21:41:41 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 21:41:41 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        HealthFacility x */ select
            count(*) 
        from
            health_facilities hf1_0
2025-08-11 21:41:41 [MessageBroker-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 21:41:41 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 21:41:41 [MessageBroker-1] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 21:41:41 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        el1_0.id,
        el1_0.audio_url,
        el1_0.author,
        el1_0.category,
        el1_0.content,
        el1_0.created_at,
        el1_0.description,
        el1_0.duration_minutes,
        el1_0.is_published,
        el1_0.language,
        el1_0.level,
        el1_0.order_index,
        el1_0.title,
        el1_0.updated_at,
        el1_0.version,
        el1_0.video_url,
        el1_0.view_count 
    from
        education_lessons el1_0
2025-08-11 21:41:41 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 21:41:41 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ContraceptionMethod x */ select
            count(*) 
        from
            contraception_methods cm1_0
2025-08-11 21:41:41 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        MenstrualCycle x */ select
            count(*) 
        from
            menstrual_cycles mc1_0
2025-08-11 21:41:41 [main] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        EducationLesson x */ select
            count(*) 
        from
            education_lessons el1_0
2025-08-11 21:41:41 [RMI TCP Connection(3)-192.168.1.75] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 21:41:41 [RMI TCP Connection(3)-192.168.1.75] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 21:41:41 [RMI TCP Connection(3)-192.168.1.75] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-11 21:42:41 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2025-08-11 21:44:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/dashboard/stats
2025-08-11 21:44:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/dashboard/stats
2025-08-11 21:44:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:44:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:44:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.village = :village 
        AND u.role = 'CLIENT' 
        AND u.status = 'ACTIVE' */ select
            u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.village=? 
            and u1_0.role='CLIENT' 
            and u1_0.status='ACTIVE'
2025-08-11 21:44:00 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/clients
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/clients
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAssignedClients(java.lang.Long); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.village=? 
        and u1_0.role=?
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /health-worker/2/appointments
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /health-worker/2/appointments
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity rw.health.ubuzima.controller.HealthWorkerController.getAppointments(java.lang.Long,java.lang.String,java.lang.String); target is of class [rw.health.ubuzima.controller.HealthWorkerController]
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.health_worker_id=?
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:44:01 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        hf1_0.id,
        hf1_0.address,
        hf1_0.created_at,
        hf1_0.email,
        hf1_0.emergency_contact,
        hf1_0.facility_type,
        hf1_0.is_active,
        hf1_0.latitude,
        hf1_0.longitude,
        hf1_0.name,
        hf1_0.operating_hours,
        hf1_0.phone_number,
        hf1_0.services_offered,
        hf1_0.updated_at,
        hf1_0.version,
        hf1_0.website_url 
    from
        health_facilities hf1_0 
    where
        hf1_0.id=?
2025-08-11 21:44:34 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-08-11 21:44:34 [http-nio-0.0.0.0-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-08-11 21:45:06 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-11 21:45:06 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-11 21:45:06 [http-nio-0.0.0.0-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-11 21:45:06 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:45:06 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:06 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:06 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:45:06 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:45:07 [http-nio-0.0.0.0-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for rw.health.ubuzima.entity.User */update users 
    set
        cell=?,
        date_of_birth=?,
        device_token=?,
        district=?,
        email=?,
        email_verified=?,
        emergency_contact=?,
        facility_id=?,
        gender=?,
        last_login_at=?,
        name=?,
        password_hash=?,
        phone=?,
        phone_verified=?,
        platform=?,
        preferred_language=?,
        profile_picture_url=?,
        role=?,
        sector=?,
        status=?,
        updated_at=?,
        version=?,
        village=? 
    where
        id=? 
        and version=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /education/lessons
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /education/lessons
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /education/progress/3
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /education/recommendations/3
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /education/dashboard/3
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /education/recommendations/3
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /education/dashboard/3
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /education/progress/3
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        el1_0.id,
        el1_0.audio_url,
        el1_0.author,
        el1_0.category,
        el1_0.content,
        el1_0.created_at,
        el1_0.description,
        el1_0.duration_minutes,
        el1_0.is_published,
        el1_0.language,
        el1_0.level,
        el1_0.order_index,
        el1_0.title,
        el1_0.updated_at,
        el1_0.version,
        el1_0.video_url,
        el1_0.view_count 
    from
        education_lessons el1_0 
    where
        el1_0.is_published 
    order by
        el1_0.order_index
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /community-events
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ep 
    FROM
        EducationProgress ep 
    JOIN
        
    FETCH
        ep.lesson 
    WHERE
        ep.user = :user 
    ORDER BY
        ep.lastAccessedAt DESC */ select
            ep1_0.id,
            ep1_0.completed_at,
            ep1_0.created_at,
            ep1_0.is_completed,
            ep1_0.last_accessed_at,
            ep1_0.lesson_id,
            l1_0.id,
            l1_0.audio_url,
            l1_0.author,
            l1_0.category,
            l1_0.content,
            l1_0.created_at,
            l1_0.description,
            l1_0.duration_minutes,
            l1_0.is_published,
            l1_0.language,
            l1_0.level,
            l1_0.order_index,
            l1_0.title,
            l1_0.updated_at,
            l1_0.version,
            l1_0.video_url,
            l1_0.view_count,
            ep1_0.notes,
            ep1_0.progress_percentage,
            ep1_0.quiz_attempts,
            ep1_0.quiz_score,
            ep1_0.time_spent_minutes,
            ep1_0.updated_at,
            ep1_0.user_id,
            ep1_0.version 
        from
            education_progress ep1_0 
        join
            education_lessons l1_0 
                on l1_0.id=ep1_0.lesson_id 
        where
            ep1_0.user_id=? 
        order by
            ep1_0.last_accessed_at desc
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        ep 
    FROM
        EducationProgress ep 
    JOIN
        
    FETCH
        ep.lesson 
    WHERE
        ep.user = :user 
        AND ep.isCompleted = true */ select
            ep1_0.id,
            ep1_0.completed_at,
            ep1_0.created_at,
            ep1_0.is_completed,
            ep1_0.last_accessed_at,
            ep1_0.lesson_id,
            l1_0.id,
            l1_0.audio_url,
            l1_0.author,
            l1_0.category,
            l1_0.content,
            l1_0.created_at,
            l1_0.description,
            l1_0.duration_minutes,
            l1_0.is_published,
            l1_0.language,
            l1_0.level,
            l1_0.order_index,
            l1_0.title,
            l1_0.updated_at,
            l1_0.version,
            l1_0.video_url,
            l1_0.view_count,
            ep1_0.notes,
            ep1_0.progress_percentage,
            ep1_0.quiz_attempts,
            ep1_0.quiz_score,
            ep1_0.time_spent_minutes,
            ep1_0.updated_at,
            ep1_0.user_id,
            ep1_0.version 
        from
            education_progress ep1_0 
        join
            education_lessons l1_0 
                on l1_0.id=ep1_0.lesson_id 
        where
            ep1_0.user_id=? 
            and ep1_0.is_completed=true
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ep 
    FROM
        EducationProgress ep 
    JOIN
        
    FETCH
        ep.lesson 
    WHERE
        ep.user = :user 
    ORDER BY
        ep.lastAccessedAt DESC */ select
            ep1_0.id,
            ep1_0.completed_at,
            ep1_0.created_at,
            ep1_0.is_completed,
            ep1_0.last_accessed_at,
            ep1_0.lesson_id,
            l1_0.id,
            l1_0.audio_url,
            l1_0.author,
            l1_0.category,
            l1_0.content,
            l1_0.created_at,
            l1_0.description,
            l1_0.duration_minutes,
            l1_0.is_published,
            l1_0.language,
            l1_0.level,
            l1_0.order_index,
            l1_0.title,
            l1_0.updated_at,
            l1_0.version,
            l1_0.video_url,
            l1_0.view_count,
            ep1_0.notes,
            ep1_0.progress_percentage,
            ep1_0.quiz_attempts,
            ep1_0.quiz_score,
            ep1_0.time_spent_minutes,
            ep1_0.updated_at,
            ep1_0.user_id,
            ep1_0.version 
        from
            education_progress ep1_0 
        join
            education_lessons l1_0 
                on l1_0.id=ep1_0.lesson_id 
        where
            ep1_0.user_id=? 
        order by
            ep1_0.last_accessed_at desc
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /community-events
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-7] INFO  r.h.u.c.CommunityEventController - Received request to get all community events
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ce1_0.id,
        ce1_0.contact_info,
        ce1_0.created_at,
        ce1_0.current_participants,
        ce1_0.description,
        ce1_0.end_date,
        ce1_0.event_date,
        ce1_0.is_active,
        ce1_0.is_cancelled,
        ce1_0.is_virtual,
        ce1_0.location,
        ce1_0.max_participants,
        ce1_0.organizer_id,
        ce1_0.registration_deadline,
        ce1_0.registration_required,
        ce1_0.title,
        ce1_0.type,
        ce1_0.updated_at,
        ce1_0.virtual_link 
    from
        community_events ce1_0 
    where
        ce1_0.is_active 
        and not(ce1_0.is_cancelled) 
    order by
        ce1_0.event_date
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ep 
    FROM
        EducationProgress ep 
    JOIN
        
    FETCH
        ep.lesson 
    WHERE
        ep.user = :user 
        AND ep.isCompleted = true */ select
            ep1_0.id,
            ep1_0.completed_at,
            ep1_0.created_at,
            ep1_0.is_completed,
            ep1_0.last_accessed_at,
            ep1_0.lesson_id,
            l1_0.id,
            l1_0.audio_url,
            l1_0.author,
            l1_0.category,
            l1_0.content,
            l1_0.created_at,
            l1_0.description,
            l1_0.duration_minutes,
            l1_0.is_published,
            l1_0.language,
            l1_0.level,
            l1_0.order_index,
            l1_0.title,
            l1_0.updated_at,
            l1_0.version,
            l1_0.video_url,
            l1_0.view_count,
            ep1_0.notes,
            ep1_0.progress_percentage,
            ep1_0.quiz_attempts,
            ep1_0.quiz_score,
            ep1_0.time_spent_minutes,
            ep1_0.updated_at,
            ep1_0.user_id,
            ep1_0.version 
        from
            education_progress ep1_0 
        join
            education_lessons l1_0 
                on l1_0.id=ep1_0.lesson_id 
        where
            ep1_0.user_id=? 
            and ep1_0.is_completed=true
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ep 
    FROM
        EducationProgress ep 
    JOIN
        
    FETCH
        ep.lesson 
    WHERE
        ep.user = :user 
        AND ep.isCompleted = true */ select
            ep1_0.id,
            ep1_0.completed_at,
            ep1_0.created_at,
            ep1_0.is_completed,
            ep1_0.last_accessed_at,
            ep1_0.lesson_id,
            l1_0.id,
            l1_0.audio_url,
            l1_0.author,
            l1_0.category,
            l1_0.content,
            l1_0.created_at,
            l1_0.description,
            l1_0.duration_minutes,
            l1_0.is_published,
            l1_0.language,
            l1_0.level,
            l1_0.order_index,
            l1_0.title,
            l1_0.updated_at,
            l1_0.version,
            l1_0.video_url,
            l1_0.view_count,
            ep1_0.notes,
            ep1_0.progress_percentage,
            ep1_0.quiz_attempts,
            ep1_0.quiz_score,
            ep1_0.time_spent_minutes,
            ep1_0.updated_at,
            ep1_0.user_id,
            ep1_0.version 
        from
            education_progress ep1_0 
        join
            education_lessons l1_0 
                on l1_0.id=ep1_0.lesson_id 
        where
            ep1_0.user_id=? 
            and ep1_0.is_completed=true
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ep 
    FROM
        EducationProgress ep 
    JOIN
        
    FETCH
        ep.lesson 
    WHERE
        ep.user = :user 
        AND ep.progressPercentage > 0 
        AND ep.isCompleted = false 
    ORDER BY
        ep.lastAccessedAt DESC */ select
            ep1_0.id,
            ep1_0.completed_at,
            ep1_0.created_at,
            ep1_0.is_completed,
            ep1_0.last_accessed_at,
            ep1_0.lesson_id,
            l1_0.id,
            l1_0.audio_url,
            l1_0.author,
            l1_0.category,
            l1_0.content,
            l1_0.created_at,
            l1_0.description,
            l1_0.duration_minutes,
            l1_0.is_published,
            l1_0.language,
            l1_0.level,
            l1_0.order_index,
            l1_0.title,
            l1_0.updated_at,
            l1_0.version,
            l1_0.video_url,
            l1_0.view_count,
            ep1_0.notes,
            ep1_0.progress_percentage,
            ep1_0.quiz_attempts,
            ep1_0.quiz_score,
            ep1_0.time_spent_minutes,
            ep1_0.updated_at,
            ep1_0.user_id,
            ep1_0.version 
        from
            education_progress ep1_0 
        join
            education_lessons l1_0 
                on l1_0.id=ep1_0.lesson_id 
        where
            ep1_0.user_id=? 
            and ep1_0.progress_percentage>0 
            and ep1_0.is_completed=false 
        order by
            ep1_0.last_accessed_at desc
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ep 
    FROM
        EducationProgress ep 
    JOIN
        
    FETCH
        ep.lesson 
    WHERE
        ep.user = :user 
        AND ep.progressPercentage > 0 
        AND ep.isCompleted = false 
    ORDER BY
        ep.lastAccessedAt DESC */ select
            ep1_0.id,
            ep1_0.completed_at,
            ep1_0.created_at,
            ep1_0.is_completed,
            ep1_0.last_accessed_at,
            ep1_0.lesson_id,
            l1_0.id,
            l1_0.audio_url,
            l1_0.author,
            l1_0.category,
            l1_0.content,
            l1_0.created_at,
            l1_0.description,
            l1_0.duration_minutes,
            l1_0.is_published,
            l1_0.language,
            l1_0.level,
            l1_0.order_index,
            l1_0.title,
            l1_0.updated_at,
            l1_0.version,
            l1_0.video_url,
            l1_0.view_count,
            ep1_0.notes,
            ep1_0.progress_percentage,
            ep1_0.quiz_attempts,
            ep1_0.quiz_score,
            ep1_0.time_spent_minutes,
            ep1_0.updated_at,
            ep1_0.user_id,
            ep1_0.version 
        from
            education_progress ep1_0 
        join
            education_lessons l1_0 
                on l1_0.id=ep1_0.lesson_id 
        where
            ep1_0.user_id=? 
            and ep1_0.progress_percentage>0 
            and ep1_0.is_completed=false 
        order by
            ep1_0.last_accessed_at desc
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        l 
    FROM
        EducationLesson l 
    WHERE
        l.isPublished = true 
        AND l.id NOT IN :completedLessonIds 
    ORDER BY
        l.viewCount DESC,
        l.createdAt DESC */ select
            el1_0.id,
            el1_0.audio_url,
            el1_0.author,
            el1_0.category,
            el1_0.content,
            el1_0.created_at,
            el1_0.description,
            el1_0.duration_minutes,
            el1_0.is_published,
            el1_0.language,
            el1_0.level,
            el1_0.order_index,
            el1_0.title,
            el1_0.updated_at,
            el1_0.version,
            el1_0.video_url,
            el1_0.view_count 
        from
            education_lessons el1_0 
        where
            el1_0.is_published=true 
            and el1_0.id not in (?) 
        order by
            el1_0.view_count desc,
            el1_0.created_at desc
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(ep.progressPercentage) 
    FROM
        EducationProgress ep 
    WHERE
        ep.user = :user */ select
            avg(ep1_0.progress_percentage) 
        from
            education_progress ep1_0 
        where
            ep1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(ep.progressPercentage) 
    FROM
        EducationProgress ep 
    WHERE
        ep.user = :user */ select
            avg(ep1_0.progress_percentage) 
        from
            education_progress ep1_0 
        where
            ep1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(ep) 
    FROM
        EducationProgress ep 
    WHERE
        ep.user = :user 
        AND ep.isCompleted = true */ select
            count(ep1_0.id) 
        from
            education_progress ep1_0 
        where
            ep1_0.user_id=? 
            and ep1_0.is_completed=true
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(ep) 
    FROM
        EducationProgress ep 
    WHERE
        ep.user = :user 
        AND ep.isCompleted = true */ select
            count(ep1_0.id) 
        from
            education_progress ep1_0 
        where
            ep1_0.user_id=? 
            and ep1_0.is_completed=true
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.lesson_id,
        t1_0.tag 
    from
        lesson_tags t1_0 
    where
        t1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.lesson_id,
        t1_0.tag 
    from
        lesson_tags t1_0 
    where
        t1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(ep.timeSpentMinutes) 
    FROM
        EducationProgress ep 
    WHERE
        ep.user = :user */ select
            sum(ep1_0.time_spent_minutes) 
        from
            education_progress ep1_0 
        where
            ep1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(ep.timeSpentMinutes) 
    FROM
        EducationProgress ep 
    WHERE
        ep.user = :user */ select
            sum(ep1_0.time_spent_minutes) 
        from
            education_progress ep1_0 
        where
            ep1_0.user_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        iu1_0.lesson_id,
        iu1_0.image_url 
    from
        lesson_images iu1_0 
    where
        iu1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        l 
    FROM
        EducationLesson l 
    WHERE
        l.isPublished = true 
        AND l.id NOT IN :completedLessonIds 
    ORDER BY
        l.viewCount DESC,
        l.createdAt DESC */ select
            el1_0.id,
            el1_0.audio_url,
            el1_0.author,
            el1_0.category,
            el1_0.content,
            el1_0.created_at,
            el1_0.description,
            el1_0.duration_minutes,
            el1_0.is_published,
            el1_0.language,
            el1_0.level,
            el1_0.order_index,
            el1_0.title,
            el1_0.updated_at,
            el1_0.version,
            el1_0.video_url,
            el1_0.view_count 
        from
            education_lessons el1_0 
        where
            el1_0.is_published=true 
            and el1_0.id not in (?) 
        order by
            el1_0.view_count desc,
            el1_0.created_at desc
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        iu1_0.lesson_id,
        iu1_0.image_url 
    from
        lesson_images iu1_0 
    where
        iu1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.lesson_id,
        t1_0.tag 
    from
        lesson_tags t1_0 
    where
        t1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        t1_0.lesson_id,
        t1_0.tag 
    from
        lesson_tags t1_0 
    where
        t1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.lesson_id,
        t1_0.tag 
    from
        lesson_tags t1_0 
    where
        t1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        iu1_0.lesson_id,
        iu1_0.image_url 
    from
        lesson_images iu1_0 
    where
        iu1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        iu1_0.lesson_id,
        iu1_0.image_url 
    from
        lesson_images iu1_0 
    where
        iu1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        iu1_0.lesson_id,
        iu1_0.image_url 
    from
        lesson_images iu1_0 
    where
        iu1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.lesson_id,
        t1_0.tag 
    from
        lesson_tags t1_0 
    where
        t1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        iu1_0.lesson_id,
        iu1_0.image_url 
    from
        lesson_images iu1_0 
    where
        iu1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.lesson_id,
        t1_0.tag 
    from
        lesson_tags t1_0 
    where
        t1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        iu1_0.lesson_id,
        iu1_0.image_url 
    from
        lesson_images iu1_0 
    where
        iu1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.lesson_id,
        t1_0.tag 
    from
        lesson_tags t1_0 
    where
        t1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        iu1_0.lesson_id,
        iu1_0.image_url 
    from
        lesson_images iu1_0 
    where
        iu1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.lesson_id,
        t1_0.tag 
    from
        lesson_tags t1_0 
    where
        t1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        iu1_0.lesson_id,
        iu1_0.image_url 
    from
        lesson_images iu1_0 
    where
        iu1_0.lesson_id=?
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /community-events/my-events
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /community-events/my-events
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-4] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/v1/community-events/my-events
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-4] ERROR rw.health.ubuzima.config.WebConfig - Error handling request: GET /api/v1/community-events/my-events
org.springframework.web.servlet.NoHandlerFoundException: No endpoint GET /api/v1/community-events/my-events.
	at org.springframework.web.servlet.DispatcherServlet.noHandlerFound(DispatcherServlet.java:1304)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api/v1] threw exception [No endpoint GET /api/v1/community-events/my-events.] with root cause
org.springframework.web.servlet.NoHandlerFoundException: No endpoint GET /api/v1/community-events/my-events.
	at org.springframework.web.servlet.DispatcherServlet.noHandlerFound(DispatcherServlet.java:1304)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at rw.health.ubuzima.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-11 21:45:32 [http-nio-0.0.0.0-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-11 21:45:36 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /community/support-groups?page=0&size=20
2025-08-11 21:45:36 [http-nio-0.0.0.0-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /community/support-groups?page=0&size=20
2025-08-11 21:45:36 [http-nio-0.0.0.0-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sg1_0.id,
        sg1_0.category,
        sg1_0.contact_info,
        sg1_0.created_at,
        sg1_0.creator_id,
        sg1_0.description,
        sg1_0.is_active,
        sg1_0.is_private,
        sg1_0.max_members,
        sg1_0.meeting_location,
        sg1_0.meeting_schedule,
        sg1_0.member_count,
        sg1_0.name,
        sg1_0.updated_at 
    from
        support_groups sg1_0 
    where
        sg1_0.is_active 
    order by
        sg1_0.created_at desc
2025-08-11 21:45:40 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /messages/conversations?userId=3
2025-08-11 21:45:40 [http-nio-0.0.0.0-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /messages/conversations?userId=3
2025-08-11 21:45:40 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-11 21:45:40 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:40 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        hr1_0.id,
        ahw1_0.id,
        ahw1_0.cell,
        ahw1_0.created_at,
        ahw1_0.date_of_birth,
        ahw1_0.device_token,
        ahw1_0.district,
        ahw1_0.email,
        ahw1_0.email_verified,
        ahw1_0.emergency_contact,
        ahw1_0.facility_id,
        ahw1_0.gender,
        ahw1_0.last_login_at,
        ahw1_0.name,
        ahw1_0.password_hash,
        ahw1_0.phone,
        ahw1_0.phone_verified,
        ahw1_0.platform,
        ahw1_0.preferred_language,
        ahw1_0.profile_picture_url,
        ahw1_0.role,
        ahw1_0.sector,
        ahw1_0.status,
        ahw1_0.updated_at,
        ahw1_0.version,
        ahw1_0.village,
        hr1_0.bmi,
        hr1_0.bp_unit,
        hr1_0.bp_value,
        hr1_0.created_at,
        hr1_0.health_status,
        hr1_0.heart_rate_unit,
        hr1_0.heart_rate_value,
        hr1_0.height_unit,
        hr1_0.height_value,
        hr1_0.is_verified,
        hr1_0.kg_unit,
        hr1_0.kg_value,
        hr1_0.last_updated,
        hr1_0.notes,
        hr1_0.recorded_by,
        hr1_0.temp_unit,
        hr1_0.temp_value,
        hr1_0.updated_at,
        hr1_0.user_id,
        u1_0.id,
        u1_0.cell,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.device_token,
        u1_0.district,
        u1_0.email,
        u1_0.email_verified,
        u1_0.emergency_contact,
        u1_0.facility_id,
        u1_0.gender,
        u1_0.last_login_at,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.phone_verified,
        u1_0.platform,
        u1_0.preferred_language,
        u1_0.profile_picture_url,
        u1_0.role,
        u1_0.sector,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_0.village,
        hr1_0.version 
    from
        health_records hr1_0 
    left join
        users ahw1_0 
            on ahw1_0.id=hr1_0.assigned_health_worker_id 
    join
        users u1_0 
            on u1_0.id=hr1_0.user_id 
    where
        hr1_0.user_id=?
2025-08-11 21:45:40 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u 
    FROM
        User u 
    WHERE
        u.id IN (SELECT
            DISTINCT m.receiver.id 
        FROM
            Message m 
        WHERE
            m.sender = :user 
        UNION
        SELECT
            DISTINCT m.sender.id 
        FROM
            Message m 
        WHERE
            m.receiver = :user 
            AND m.sender != :user) */ select
            distinct u1_0.id,
            u1_0.cell,
            u1_0.created_at,
            u1_0.date_of_birth,
            u1_0.device_token,
            u1_0.district,
            u1_0.email,
            u1_0.email_verified,
            u1_0.emergency_contact,
            u1_0.facility_id,
            u1_0.gender,
            u1_0.last_login_at,
            u1_0.name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.phone_verified,
            u1_0.platform,
            u1_0.preferred_language,
            u1_0.profile_picture_url,
            u1_0.role,
            u1_0.sector,
            u1_0.status,
            u1_0.updated_at,
            u1_0.version,
            u1_0.village 
        from
            users u1_0 
        where
            u1_0.id in (select
                distinct m1_0.receiver_id 
            from
                messages m1_0 
            where
                m1_0.sender_id=? 
            union
            select
                distinct m2_0.sender_id 
            from
                messages m2_0 
            where
                m2_0.receiver_id=? 
                and m2_0.sender_id<>?)
2025-08-11 21:45:40 [http-nio-0.0.0.0-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        m 
    FROM
        Message m 
    WHERE
        (
            m.sender = :user1 
            AND m.receiver = :user2
        ) 
        OR (
            m.sender = :user2 
            AND m.receiver = :user1
        ) 
    ORDER BY
        m.createdAt ASC */ select
            m1_0.id,
            m1_0.audio_duration,
            m1_0.audio_url,
            m1_0.content,
            m1_0.conversation_id,
            m1_0.created_at,
            m1_0.deleted_at,
            m1_0.deleted_for_everyone,
            m1_0.delivered_at,
            m1_0.edited_at,
            m1_0.file_size,
            m1_0.forwarded_from,
            m1_0.is_emergency,
            m1_0.is_forwarded,
            m1_0.is_read,
            m1_0.message_status,
            m1_0.message_type,
            m1_0.metadata,
            m1_0.mime_type,
            m1_0.priority,
            m1_0.quoted_message_id,
            m1_0.reaction,
            m1_0.read_at,
            m1_0.receiver_id,
            m1_0.reply_to_id,
            m1_0.sender_id,
            m1_0.starred,
            m1_0.thumbnail_url,
            m1_0.updated_at,
            m1_0.version 
        from
            messages m1_0 
        where
            (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
            or (
                m1_0.sender_id=? 
                and m1_0.receiver_id=?
            ) 
        order by
            m1_0.created_at
2025-08-11 21:56:41 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 21:56:41 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 21:56:41 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 21:56:41 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 21:56:41 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 21:56:41 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 21:56:41 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 21:56:41 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 21:56:41 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 21:56:41 [MessageBroker-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 21:56:41 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 21:56:41 [MessageBroker-3] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 22:11:41 [MessageBroker-4] INFO  r.h.u.s.AppointmentStatusSchedulerService - Starting scheduled appointment status update...
2025-08-11 22:11:41 [MessageBroker-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 22:11:41 [MessageBroker-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date<?
2025-08-11 22:11:41 [MessageBroker-4] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 overdue appointments to NO_SHOW (0 scheduled, 0 confirmed)
2025-08-11 22:11:41 [MessageBroker-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=? 
        and a1_0.scheduled_date between ? and ?
2025-08-11 22:11:41 [MessageBroker-4] INFO  r.h.u.s.AppointmentStatusSchedulerService - Updated 0 appointments to IN_PROGRESS
2025-08-11 22:11:41 [MessageBroker-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_type,
        a1_0.cancellation_reason,
        a1_0.cancelled_at,
        a1_0.completed_at,
        a1_0.created_at,
        a1_0.duration_minutes,
        a1_0.health_facility_id,
        a1_0.health_worker_id,
        a1_0.notes,
        a1_0.reason,
        a1_0.reminder_sent,
        a1_0.scheduled_date,
        a1_0.status,
        a1_0.updated_at,
        a1_0.user_id,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.status=?
2025-08-11 22:11:41 [MessageBroker-4] INFO  r.h.u.s.AppointmentStatusSchedulerService - Auto-completed 0 appointments
2025-08-11 22:11:41 [MessageBroker-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 22:11:41 [MessageBroker-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.scheduledDate BETWEEN :startTime AND :endTime 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
        AND a.reminderSent = false */ select
            a1_0.id,
            a1_0.appointment_type,
            a1_0.cancellation_reason,
            a1_0.cancelled_at,
            a1_0.completed_at,
            a1_0.created_at,
            a1_0.duration_minutes,
            a1_0.health_facility_id,
            a1_0.health_worker_id,
            a1_0.notes,
            a1_0.reason,
            a1_0.reminder_sent,
            a1_0.scheduled_date,
            a1_0.status,
            a1_0.updated_at,
            a1_0.user_id,
            a1_0.version 
        from
            appointments a1_0 
        where
            a1_0.scheduled_date between ? and ? 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
            and a1_0.reminder_sent=false
2025-08-11 22:11:41 [MessageBroker-4] INFO  r.h.u.s.AppointmentStatusSchedulerService - Sent 0 24-hour reminders and 0 2-hour reminders
2025-08-11 22:11:41 [MessageBroker-4] INFO  r.h.u.s.AppointmentStatusSchedulerService - Completed scheduled appointment status update
2025-08-11 22:12:41 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 7, active threads = 1, queued tasks = 2, completed tasks = 4]
2025-08-11 22:18:31 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-08-11 22:18:31 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@76592c22]]
2025-08-11 22:18:31 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-08-11 22:18:31 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 22:18:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 22:18:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
